gameui_slider_drag_id              = -1
gameui_slider_drag_cursor_pivot    = 0
gameui_slider_drag_offset          = -1
gameui_slider_drag_init_offset     = -1

gameui_slider_props = [
    [ p_width        0.36             ]
    [ p_slider_width 0.09             ]
    [ p_val_text     [[result $arg1]] ]
    [ p_min          []               ]
    [ p_max          []               ]
    [ p_val_format   []               ]
    [ p_on_change    []               ]
    [ p_on_finish    []               ]
    [ p_squared      0                ]
    [ p_round        0                ]
    [ p_tip          ""               ]
    [ p_id           []               ]
]

// 1:<var> 2:<props>
# ui_gameui_slider = [
    @(props $gameui_slider_props arg2)

    local _min _max _range _max_slider_offset _slider_offset _drag _factor _line_offset _new_val
    _max_slider_offset = (-f $p_width $p_slider_width)
    _drag              = (=s $gameui_slider_drag_id $p_id)

    if (=s $p_val_format []) [
        p_val_format = (? (= (getvartype $arg1) $ididxvar) i f)
    ]

    cases $p_val_format i [
        _min   = (? (!=s $p_min) $p_min (getvarmin $arg1))
        _max   = (? (!=s $p_max) $p_max (getvarmax $arg1))
        _range = (- $_max $_min)
    ] f [
        _min   = (? (!=s $p_min) $p_min (getfvarmin $arg1))
        _max   = (? (!=s $p_max) $p_max (getfvarmax $arg1))
        _range = (-f $_max $_min)

        if (=s $p_val_text [result $arg1]) [
            p_val_text = [round $arg1 0.01]
        ]
    ]

    if $_drag [
        gameui_slider_drag_offset = (-f $uicursorx $gameui_slider_drag_cursor_pivot)
        gameui_slider_drag_offset = (+f $gameui_slider_drag_offset $gameui_slider_drag_init_offset)
        gameui_slider_drag_offset = (clampf $gameui_slider_drag_offset 0 $_max_slider_offset)

        _slider_offset = $gameui_slider_drag_offset

        // Calculate new value from the current offset
        _factor = (divf $_slider_offset $_max_slider_offset)

        if $p_squared [
            _factor = (*f $_factor $_factor)
        ]

        if (=s $p_val_format i) [
            _new_val = (toint (+f $_min (*f $_range $_factor)))

            if (!=s $$arg1 $_new_val) [
                set $arg1 $_new_val
                p_on_change
            ]
        ] [
            _new_val = (+f $_min (*f $_range $_factor))

            if (!=f $p_round 0) [
                _new_val = (round $_new_val $p_round)
            ]

            if (!=f $$arg1 $_new_val) [
                set $arg1 $_new_val
                p_on_change
            ]
        ]
    ] [
        _factor = (divf (-f $$arg1 $_min) $_range)

        if $p_squared [
            _factor = (sqrt $_factor)
        ]

        _slider_offset = (clampf (*f $_factor $_max_slider_offset) 0 $_max_slider_offset)
    ]

    uitarget $p_width 0 [
        uihold [] [
            if $_drag [
                _drag                 = 0
                gameui_slider_drag_id = -1
                p_on_finish
            ]
        ]

        uihover [
            if (gameui_can_interact) [
                gameui_hover 1
            ]
        ]

        // 17 horizontal lines marking regular intervals
        loop i 17 [
            _line_offset = (*f $p_width (divf $i 16))

            // Don't draw the line behind the slider
            if (|| [<f $_line_offset $_slider_offset] [>f $_line_offset (+f $_slider_offset $p_slider_width)]) [
                uioffset $_line_offset 0 [
                    uialign -1
                    uiline 0x888888 0 (? (modf $i 4) 0.005 0.008)
                ]
            ]
        ]

        if (>f $_slider_offset 0) [
            uiline 0x888888 $_slider_offset
            uiprev [uialign -1]
        ]

        uiline 0x888888 (-f $p_width $_slider_offset $p_slider_width)
        uiprev [uialign 1]

        uioffset $_slider_offset 0 [
            uialign -1

            ui_gameui_button [
                p_label      = @(p_val_text $$arg1 $_factor)
                p_label_size = 1
                p_width      = @p_slider_width
                p_height     = 0.025
                p_colour     = (? @_drag #(hsvtohex 8 0.3 1) 0xcccccc)
                p_on_press   = [
                    _drag                           = 1
                    gameui_slider_drag_id           = @@p_id
                    gameui_slider_drag_offset       = 0
                    gameui_slider_drag_init_offset  = @@_slider_offset
                    gameui_slider_drag_cursor_pivot = $uicursorx
                ]
                p_tip        = [@@p_tip]
                p_id         = @(+ $p_id 1)
            ]
        ]
    ]
]
gameui_widget_register slider 2
