game_hud_weapon_weapon_last = 0
game_hud_weapon_switch_anim = 0
game_hud_weapon_pickup_anim = 0
game_hud_weapon_ammo_actual = 0
game_hud_weapon_last_state  = 0

game_hud_weapon_has_store = [
    local _weap
    _weap = (at $W_NAMES $arg1)

    || [<= $[@[_weap]ammoitem] 1] [< $[@[_weap]ammostore] 0]
]

// 1:<weapon index> 2:<length>
# ui_game_hud_weapon_inventory_item = [
    local _weap _ammo _meter _icon _icon_size _shadow_offset _weap_colour _bar_colour
    _weap       = (at $W_NAMES $arg1)
    _ammo       = (max (getclientweapammo $ui_hud_focus $arg1) 0)
    _maxammo    = $[@[_weap]ammoclip]
    _meter      = (*f $_length (divf $_ammo $_maxammo))
    _icon       = $[@[_weap]tex]
    _icon_size  = (*f $game_hud_panel_content_width 0.05)
    _shadow_offset = (*f $game_hud_player_mainbar_width 0.008)
    _weap_colour   = $[@[_weap]colour]
    _bar_colour    = (lerpcolourhsv $_weap_colour 0x202020 0.5)

    uiborderedimageclamped $skintex #(hsvtohex 30 0.25 0.35) 0 $ui_texborder $ui_screenborder $_length $game_hud_player_subbar_height [
        uicolourblend 0.5

        uiborderedimageclamped $skintex $_bar_colour 0 $ui_texborder $ui_screenborder $_meter $game_hud_player_subbar_height [
            uistyle rightbottom
        ]

        uispace (*f $game_hud_panel_content_width 0.01) 0 [
            uistyle rightmiddle

            uioffset $_shadow_offset $_shadow_offset [
                uiimage $_icon 0 0 $_icon_size $_icon_size [
                    uicolourblend 0.5
                ]
            ]
            uiimage $_icon $_weap_colour 0 $_icon_size $_icon_size
        ]

        ui_gameui_shadow
    ]
]

ui_game_hud_weapon_inventory = [
    local _weap_idxs _gap
    _gap       = (*f $game_hud_player_subbar_width 0.01)
    _weap_idxs = []
    _num_inv   = 0

    loopinventory $ui_hud_focus 0 0 _weap_idx [
        if (&& [!= $_weap_idx (getclientweapselect $ui_hud_focus)] [!= $_weap_idx 0]) [
            append _weap_idxs $_weap_idx
            _num_inv = (+ $_num_inv 1)
        ]
    ]

    uigroup [
        uifill 0 $game_hud_player_subbar_height // Reserve vertical space for the impulse bar

        uihlist 0 [
            loop i $_num_inv [
                local _weap_idx _length _total_gaps
                _weap_idx   = (at $_weap_idxs $i)
                _total_gaps = (*f $_gap (- $_num_inv 1))
                _length     = (divf (-f $game_hud_player_subbar_width $_total_gaps) $_num_inv)

                ui_game_hud_weapon_inventory_item $_weap_idx $_length

                if (= $i (- $_num_inv 1)) [] [
                    uifill $_gap 0
                ]
            ]
        ]

        ui_gameui_shadow
    ]
]

# ui_game_hud_weapon_ammo = [
    local _weap_idx _weap _maxammo _ammo _ammometer _bar_colour _shadow_offset _text_offset _state _time _reload_end_time _reload_anim
    _weap_idx  = (getclientweapselect $ui_hud_focus)
    _weap      = (at $W_NAMES $_weap_idx)
    _ammo      = (max (getclientweapammo $ui_hud_focus $_weap_idx) 0)
    _maxammo   = $[@[_weap]ammoclip]
    _state     = (getclientweapstate $ui_hud_focus $_weap_idx)
    _time      = (getclientweaptime $ui_hud_focus $_weap_idx)
    _reload_end_time = (+ $_time $[@[_weap]delayreload])

    _bar_colour = (lerpcolourhsv $[@[_weap]colour] 0 $game_hud_weapon_switch_anim)

    if (&& [= $_state 3] [< $lastmillis $_reload_end_time]) [
        _reload_anim = (smoothstep (divf (-f $lastmillis $_time) (-f $_reload_end_time $_time)))
        _ammo = (lerpf $game_hud_weapon_ammo_actual $_ammo $_reload_anim)
    ] [
        game_hud_weapon_ammo_actual = $_ammo
    ]

    _ammometer = (*f (clampf (divf $_ammo $_maxammo) 0 1) $game_hud_player_mainbar_width)

    uiborderedimageclamped $skintex #(hsvtohex 30 0.25 0.35) 0 $ui_texborder $ui_screenborder $game_hud_player_mainbar_width $game_hud_player_mainbar_height [
        uistyle rightbottom
        uicolourblend 0.5

        uiborderedimageclamped $skintex $_bar_colour 0 $ui_texborder $ui_screenborder $_ammometer $game_hud_player_mainbar_height [
            uistyle rightbottom
        ]

        uiclip $game_hud_player_mainbar_width $game_hud_player_mainbar_height 0 0 [
            uistyle leftbottom

            local _regen_flash
            _regen_flash = (*f $game_hud_player_mainbar_width $game_hud_weapon_pickup_anim)

            uioffset $_regen_flash (*f $game_hud_player_mainbar_width -0.06) [
                uiimage "data/textures/hud/glow" 0xffffff 0 (*f $game_hud_player_mainbar_width 0.4) (*f $game_hud_player_mainbar_width 0.2) [
                    uicolourblend $game_hud_weapon_pickup_anim
                ]
            ]
        ]

        local _ammo_text local _text_size_anim _text_size

        _text_size_anim = (gameui_anim_flash $game_hud_weapon_pickup_anim 1 1)

        _text_offset   = (*f $game_hud_player_mainbar_width 0.01)
        _shadow_offset = (*f $game_hud_player_mainbar_width 0.012)

        _text_offset = (-f $_text_offset (*f $_text_size_anim -0.0005))

        uispace (*f $game_hud_player_mainbar_width 0.02) 0 [
            uistyle rightbottom

            uiclip $game_hud_player_mainbar_width $game_hud_player_mainbar_height 0 $_text_offset [
                uistyle rightmiddle

                uifont "play/clear/bold" [
                    uistyle leftmiddle

                    _ammo_text = ""
                    _text_size = (lerpf $game_hud_player_mainbar_text_size (*f $game_hud_player_mainbar_text_size 1.1) $_text_size_anim)

                    if (game_hud_weapon_has_store $_weap_idx) [
                        _ammo_text = (toint $game_hud_weapon_ammo_actual)
                    ] [
                        _ammo_text = (concat (toint $game_hud_weapon_ammo_actual) "/" (max (getclientweapstore $ui_hud_focus $_weap_idx) 0))
                    ]

                    uioffset $_shadow_offset $_shadow_offset [
                        uicolourtext $_ammo_text 0 $_text_size [
                            uicolourblend 0.75
                        ]
                    ]

                    uitext $_ammo_text $_text_size
                ]
            ]
        ]

        ui_gameui_shadow
    ]
]

# ui_game_hud_weapon = [
    local _weap_idx _state
    _weap_idx = (getclientweapselect $ui_hud_focus)
    _state    = (getclientweapstate $ui_hud_focus $_weap_idx)

    if (&& [= $_state 7] [!= $_state $game_hud_weapon_last_state]) [
            game_hud_weapon_pickup_anim = 1
    ] [
        if (!= $_weap_idx $game_hud_weapon_weapon_last) [
            game_hud_weapon_switch_anim = 1
        ]
    ]

    uihlist 0 [
        uivlist (*f $game_hud_panel_content_width 0.025) [
            uistyle rightbottom

            ui_game_hud_weapon_ammo
            ui_game_hud_weapon_inventory

            uipropchild [
                uistyle rightbottom
            ]
        ]

        local _base_icon_size _weap _weap_icon _weap_icon_size _weap_colour
        _weap = (at $W_NAMES $_weap_idx)
        _weap_icon = $[@[_weap]tex]
        _weap_colour = $[@[_weap]colour]
        _base_icon_size = (lerpf 1 0.75 $game_hud_weapon_switch_anim)
        _base_icon_size = (*f $_base_icon_size $game_hud_panel_icon_width)
        _weap_icon_size = (*f $_base_icon_size 0.67)

        uifill $game_hud_panel_icon_width $game_hud_panel_icon_width [
            local _pickup_effect_size

            _pickup_effect_size = (lerpf $_base_icon_size $_weap_icon_size $game_hud_weapon_pickup_anim)

            uiimage $_weap_icon $_weap_colour 0 $_pickup_effect_size $_pickup_effect_size [
                uicolourblend $game_hud_weapon_pickup_anim
            ]
            uiimage $_weap_icon $_weap_colour 0 $_weap_icon_size $_weap_icon_size
        ]
    ]

    game_hud_weapon_last_state  = $_state
    game_hud_weapon_weapon_last = $_weap_idx
    game_hud_weapon_switch_anim = (animstep $game_hud_weapon_switch_anim 100 -1)
    game_hud_weapon_pickup_anim = (animstep $game_hud_weapon_pickup_anim 200 -1)
]
