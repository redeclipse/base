game_hud_player_health_smooth      = 0
game_hud_player_health_last_regen  = 0
game_hud_player_health_regen_anim  = 0

game_hud_player_last_impulse_count = 0
game_hud_player_impulse_regen_anim = 0

# GAME_HUD_PLAYER_EFFECTS_DEF = [
    [ "burn"    #PULSE_BURN    getclientburnfunc    ]
    [ "bleed"   #PULSE_BLEED   getclientbleedfunc   ]
    [ "shock"   #PULSE_SHOCK   getclientshockfunc   ]
    [ "corrode" #PULSE_CORRODE getclientcorrodefunc ]
    [ "buff"    #PULSE_BUFF    getclientbuffing     ]
]

// 1:<icon> 2:<colour> 3:<check>
ui_game_hud_player_effects_effect = [
    if $arg3 [
        uifill $game_hud_player_effect_height $game_hud_player_effect_height [
            local _size
            _size = (gameui_anim_pulse 1 (*f $game_hud_player_effect_height 0.9) $game_hud_player_effect_height)

            uiimage $arg1 $arg2 0 $_size $_size
        ]
    ]
]

ui_game_hud_player_effects = [
    uifill 0 $game_hud_player_effect_height [
        uihlist (*f $game_hud_panel_content_width 0.01) [
            looplist item $GAME_HUD_PLAYER_EFFECTS_DEF [
                local _icon _colour _check
                _icon   = (concatword "data/textures/icons/" (at $item 0))
                _colour = (getclientpulsecolour $ui_hud_focus (at $item 1))
                _check  = ((at $item 2) $ui_hud_focus)

                ui_game_hud_player_effects_effect $_icon $_colour $_check
            ]
        ]
    ]
]

# ui_game_hud_player_health = [
    local _health _healthmeter _meter_smooth_t _bar_colour _text_offset _shadow_offset
    _health = (divf (getclienthealth $ui_hud_focus) (getclientspawnhealth $ui_hud_focus))

    _meter_smooth_t = (clampf (*f 0.02 $curtime) 0 1)
    game_hud_player_health_smooth = (lerpf $game_hud_player_health_smooth (clampf $_health 0 1) $_meter_smooth_t)

    _healthmeter = (*f $game_hud_player_health_smooth $game_hud_player_mainbar_width)

    if (&& [getclientregen $ui_hud_focus] [!= $game_hud_player_health_last_regen (getclientregen $ui_hud_focus)]) [
        game_hud_player_health_last_regen = (getclientregen $ui_hud_focus)
        game_hud_player_health_regen_anim = 1
    ]

    _bar_colour = (lerpcolourhsv #(hsvtohex 0 0.75 1) #(hsvtohex 120 0.6 0.75) $_health)

    if (>f $game_hud_player_health_regen_anim 0) [
        _bar_colour = (lerpcolourhsv $_bar_colour #(hsvtohex 120 0.3 1) $game_hud_player_health_regen_anim)
    ]

    uiborderedimageclamped $skintex #(hsvtohex 30 0.25 0.35) 0 $ui_texborder $ui_screenborder $game_hud_player_mainbar_width $game_hud_player_mainbar_height [
        uistyle leftbottom
        uicolourblend 0.5

        uiborderedimageclamped $skintex $_bar_colour 0 $ui_texborder $ui_screenborder $_healthmeter $game_hud_player_mainbar_height [
            uistyle leftbottom
        ]

        uiclip $game_hud_player_mainbar_width $game_hud_player_mainbar_height 0 0 [
            uistyle leftbottom

            local _regen_flash
            _regen_flash = (*f $game_hud_player_mainbar_width (-f 1 $game_hud_player_health_regen_anim))

            uioffset $_regen_flash (*f $game_hud_player_mainbar_width -0.06) [
                uiimage "data/textures/hud/glow" 0xffffff 0 (*f $game_hud_player_mainbar_width 0.4) (*f $game_hud_player_mainbar_width 0.2) [
                    uicolourblend $game_hud_player_health_regen_anim
                ]
            ]
        ]

        local _health_text _text_size_anim _text_size

        _text_size_anim = (gameui_anim_flash $game_hud_player_health_regen_anim 1 1)

        _text_offset   = (*f $game_hud_player_mainbar_width 0.01)
        _shadow_offset = (*f $game_hud_player_mainbar_width 0.012)

        _text_offset = (-f $_text_offset (*f $_text_size_anim -0.0005))

        uiclip $game_hud_player_mainbar_width $game_hud_player_mainbar_height (*f $game_hud_player_mainbar_width -0.02) $_text_offset [
            uifill $game_hud_player_mainbar_width 0
            _health_text    = (? (hasmut $G_M_INSTAGIB) "INSTAGIB" (toint (ceilf (*f $_health 100))))
            _text_size      = (lerpf $game_hud_player_mainbar_text_size (*f $game_hud_player_mainbar_text_size 1.1) $_text_size_anim)

            uistyle leftmiddle

            uifont "play/clear/bold" [
                uistyle leftmiddle

                uioffset $_shadow_offset $_shadow_offset [
                    uicolourtext $_health_text 0 $_text_size [
                        uicolourblend 0.75
                    ]
                ]

                uitext $_health_text $_text_size
            ]
        ]

        ui_gameui_shadow
    ]

    game_hud_player_health_regen_anim = (animstep $game_hud_player_health_regen_anim 200 -1)
]

// 1:<length> 2:<highlight>
# ui_game_hud_player_impulse_segment = [
    local _colour _length _anim _player_colour
    _player_colour = (getclientcolour $ui_hud_focus $playereffecttone $playereffecttonelevel $playereffecttonemix)
    _colour = (? $arg2 #(hsvtohex 30 0.1 1) $_player_colour)
    _length = $arg1

    if $_highlight [
        _length = (+f $_length (*f $_length $game_hud_player_impulse_regen_anim))
    ]

    uiborderedimageclamped $skintex $_colour 0 $ui_texborder $ui_screenborder $_length $game_hud_player_subbar_height [
        if $_highlight [
            uicolourblend (-f 1 $game_hud_player_impulse_regen_anim)
        ]
        ui_gameui_shadow
    ]
]

# ui_game_hud_player_impulse = [
    local _gap _impulses _impulsemeter _regen_time _meter_bg_colour _meter_bg_blend _total_imp_energy _meter_flash_anim
    _gap           = (*f $game_hud_player_subbar_width 0.01)
    _impulses     = (- $impulsecount (getclientimpulsecount $ui_hud_focus))
    _impulsemeter = (- $impulsecostmeter (getclientimpulsecostmeter $ui_hud_focus))

    _total_imp_energy = (divf $_impulsemeter $impulsecostmeter)

    // Clamp to 0.015 to avoid image border rounding issues
    _impulsemeter = (*f (clampf $_total_imp_energy 0.015 1) $game_hud_player_subbar_width)

    _regen_time = (getclientimpulselastcount $ui_hud_focus)

    if $_regen_time [
        _impulses = (clamp (+ $_impulses 1) 0 $impulsecount)
    ]

    if (< $game_hud_player_last_impulse_count $_impulses) [
        game_hud_player_impulse_regen_anim = 1
    ]

    _meter_bg_colour = #(hsvtohex 30 0.1 0.35)
    _meter_bg_blend  = 0.5

    if (<f $_total_imp_energy 0.25) [
        _meter_flash_anim = (gameui_anim_pulse 2 0 1)
        _meter_bg_colour  = (lerpcolourhsv $_meter_bg_colour #(hsvtohex 0 1 1) $_meter_flash_anim)
        _meter_bg_blend   = (lerpf 0.5 0.75 $_meter_flash_anim)
    ]

    uigroup [
        uifill 0 $game_hud_player_subbar_height // Reserve vertical space for the impulse bar

        uihlist 0 [
            uistyle leftbottom

            loop i $_impulses [
                local _length _total_gaps _highlight _anim
                _total_gaps = (*f $_gap (- $impulsecount 1))
                _length = (divf (-f $game_hud_player_subbar_width $_total_gaps) $impulsecount)

                _highlight = (&& (= $i (- $_impulses 1)) $_regen_time)

                ui_game_hud_player_impulse_segment $_length $_highlight

                // Use uifill for gaps, uihlist spacing is weird and math doesn't match up
                if (= $i (- $impulsecount 1)) [] [
                    uifill $_gap 0
                ]
            ]
        ]

        uiborderedimageclamped $skintex $_meter_bg_colour 0 $ui_texborder $ui_screenborder $game_hud_player_subbar_width (*f $game_hud_player_subbar_height 0.25) [
            uicolourblend $_meter_bg_blend

            uiborderedimageclamped $skintex #(hsvtohex 30 0.1 1) 0 $ui_texborder $ui_screenborder $_impulsemeter (*f $game_hud_player_subbar_height 0.25) [
                uistyle leftbottom
            ]

            uistyle leftbottom
        ]

        ui_gameui_shadow
    ]

    game_hud_player_last_impulse_count = $_impulses
    game_hud_player_impulse_regen_anim = (animstep $game_hud_player_impulse_regen_anim 200 -1)
]

# ui_game_hud_player = [
    uihlist 0 [
        uistyle leftbottom

        local _model_icon
        _model_icon = (at ["playermale" "playerfemale"] (getclientmodel $ui_hud_focus))
        _model_icon = (concatword "data/textures/icons/" $_model_icon)
        uiimage $glowtex 0xffffff 0 $game_hud_panel_icon_width $game_hud_panel_icon_width [
            // Flash if player is carrying any affinities
            if (!= $game_hud_affinity_avail_targets 3) [
                uicolourblend (*f (gameui_anim_pulse 1 0 0.85) (gameui_anim_pulse 0.25 0 1))
            ] [
                uicolourblend 0
            ]

            uiimage $_model_icon (getclientcolour $ui_hud_focus $playerdisplaytone $playerdisplaytonelevel $playerdisplaytonemix) 0 $game_hud_panel_icon_width $game_hud_panel_icon_width [
                local _affinity_icon_size _affinity_offset
                _affinity_icon_size = (*f $game_hud_panel_icon_width 0.5)
                _affinity_offset    = (*f $_affinity_icon_size 0.5)
                uipad 0 0 (gameui_anim_pulse 0.25 0 (*f $_affinity_icon_size 0.1)) 0 [
                    uialign -1 -1
                    uifill $_affinity_icon_size $_affinity_icon_size [
                        game_hud_layout_target game_hud_player_affinity_target1
                    ]

                    uioffset 0 $_affinity_offset [
                        uifill $_affinity_icon_size $_affinity_icon_size [
                            game_hud_layout_target game_hud_player_affinity_target2
                        ]
                    ]

                ]
            ]
        ]

        uivlist (*f $game_hud_panel_content_width 0.025) [
            uistyle leftbottom

            ui_game_hud_player_effects
            ui_game_hud_player_health
            ui_game_hud_player_impulse

            uipropchild [
                uistyle leftbottom
            ]
        ]
    ]
]
