exec "config/ui/game/hud/player.cfg"
exec "config/ui/game/hud/weapon.cfg"
exec "config/ui/game/hud/match.cfg"
exec "config/ui/game/hud/affinity.cfg"
exec "config/ui/game/hud/frags.cfg"
exec "config/ui/game/hud/pie.cfg"

// 1:<event id> 2:<event type> 2:<event action>
game_hud_game_event_handler_capture = [
    if (=s $arg2 "score") [
        game_hud_match_effect_team = $event_team
        game_hud_match_effect_anim = 1
    ]

    if $event_is_focus [
        cases $arg2 "score" [
            game_hud_affinity_event $GAME_HUD_AFFINITY_SCORE $event_affinity
        ] "secure" [
            game_hud_affinity_event $GAME_HUD_AFFINITY_SECURE $event_affinity
        ] "drop" [
            game_hud_affinity_event $GAME_HUD_AFFINITY_DROP $event_affinity
        ] "return" [
            game_hud_affinity_event $GAME_HUD_AFFINITY_RETURN $event_affinity
        ]
    ]
]

// 1:<event id> 2:<event type> 2:<event action>
game_hud_game_event_handler_defend = [
    if (&& $event_is_focus [=s $arg2 "secure"]) [
        game_hud_affinity_event $GAME_HUD_AFFINITY_SECURE $event_affinity
    ]
]

// 1:<event id> 2:<event type> 2:<event action>
game_hud_game_event_handler_bomber = [
    if (=s $arg2 "score") [
        game_hud_match_effect_team = $event_team
        game_hud_match_effect_anim = 1
    ]

    if $event_is_focus [
        cases $arg2 "score" [
            game_hud_affinity_event $GAME_HUD_AFFINITY_SCORE $event_affinity
        ] "secure" [
            game_hud_affinity_event $GAME_HUD_AFFINITY_SECURE $event_affinity
        ] "drop" [
            game_hud_affinity_event $GAME_HUD_AFFINITY_DROP $event_affinity
        ]
    ]
]

// 1:<death id> 2:<death type> 2:<death action>
game_hud_game_death_handler_frag = [
    local _style
    _style  = (getdeathlist $arg1 "args" "style")

    if (= $ui_hud_focus (getdeathtag $arg1 "client" 1 "clientnum")) [
        if (= $ui_hud_focus $getclientnum) [
            game_hud_frag (getdeathtag $arg1 "client" 0 "clientnum")
        ]

        if (& $_style $FRAG_HEADSHOT) [
            game_hud_frag_special $GAME_HUD_FRAG_SPECIAL_HEADSHOT
        ]
        if (& $_style $FRAG_REVENGE) [
            game_hud_frag_special $GAME_HUD_FRAG_SPECIAL_REVENGE
        ]
        if (& $_style $FRAG_DOMINATE) [
            game_hud_frag_special $GAME_HUD_FRAG_SPECIAL_DOMINATING
        ]
        if (& $_style $FRAG_BREAKER) [
            game_hud_frag_special $GAME_HUD_FRAG_SPECIAL_SPREEBREAKER
        ]
        if (& $_style $FRAG_MKILL1) [
            game_hud_frag_special $GAME_HUD_FRAG_SPECIAL_DOUBLEKILL
        ]
        if (& $_style $FRAG_MKILL2) [
            game_hud_frag_special $GAME_HUD_FRAG_SPECIAL_TRIPLEKILL
        ]
        if (& $_style $FRAG_MKILL3) [
            game_hud_frag_special $GAME_HUD_FRAG_SPECIAL_MULTIKILL
        ]
        if (& $_style $FRAG_FIRSTBLOOD) [
            game_hud_frag_special $GAME_HUD_FRAG_SPECIAL_FIRSTBLOOD
        ]
        if (& $_style $FRAG_SPREE1) [
            game_hud_frag_special $GAME_HUD_FRAG_SPECIAL_CARNAGE
        ]
        if (& $_style $FRAG_SPREE2) [
            game_hud_frag_special $GAME_HUD_FRAG_SPECIAL_SLAUGHTER
        ]
        if (& $_style $FRAG_SPREE3) [
            game_hud_frag_special $GAME_HUD_FRAG_SPECIAL_MASSACRE
        ]
        if (& $_style $FRAG_SPREE4) [
            game_hud_frag_special $GAME_HUD_FRAG_SPECIAL_BLOODBATH
        ]
    ] [
        if (= (getdeathtag $arg1 "client" 0 "clientnum") $getclientnum) [
            game_hud_frag_by (getdeathtag $arg1 "client" 1 "clientnum")
        ]
    ]
]

game_hud_game_event_balance_time = 0

game_hud_game_event_balance_time_reset = [
    game_hud_game_event_balance_time = 0
]
onevent $CMD_EVENT_MAPLOAD game_hud_game_event_balance_time_reset

// 1:<event id> 2:<event type> 2:<event action>
game_hud_game_event_handler_balance = [
    if (=s $arg2 "swap") [
        game_hud_game_event_balance_time = (+ $gametimesync (geteventlist $event_id "args" "millis"))
    ]
]

// 1:<event id> 2:<event type> 2:<event action>
game_hud_game_event_handler = [
    cases $arg2 "capture" [
        game_hud_game_event_handler_capture $arg1 $arg3
    ] "defend" [
        game_hud_game_event_handler_defend $arg1 $arg3
    ] "bomber" [
        game_hud_game_event_handler_bomber $arg1 $arg3
    ] "balance" [
        game_hud_game_event_handler_balance $arg1 $arg3
    ]
]
event_register_handler game_hud_game_event_handler


game_hud_game_death_handler = [
    cases $arg2 "frag" [
        game_hud_game_death_handler_frag $arg1 $arg3
    ] "suicide" [
        game_hud_game_death_handler_frag $arg1 $arg3
    ]
]
death_register_handler game_hud_game_death_handler

ui_game_hud_status_player_spawn = [
    local _time _size _pos

    uifont "play/clear/bold" [
        if (hasmut $G_M_DUEL) [
            _pos = (getclientqueuepos $ui_hud_focus)

            if (>= $_pos 0) [
                _pos = (? $_pos (get_pos_string (+ $_pos 1)) "next")

                uihlist 0.01 [
                    uicolourtext "You are" 0x666666 1.2
                    uicolourtext $_pos (pulsecolour $PULSE_FLASH) 1.4
                    uicolourtext "in the queue!" 0x666666 1.2
                ]
            ]
        ] [
            _time = (precf (round (*f $getclientrespawnwait 0.001) 0.1) 1)
            _size = (*f (gameui_anim_pulse 0.2 1.6 1.8) $game_hud_status_text_size)

            uihlist 0.01 [
                uicolourtext "Spawning in" 0x666666 (*f $_size 0.9)
                uicolourtext (concatword $_time "s") (pulsecolour $PULSE_FLASH) $_size
            ]
        ]
    ]
]

ui_game_hud_status_team_swap = [
    local _time _size

    uifont "play/clear/bold" [
        _time = (precf (round (*f (- $game_hud_game_event_balance_time $gametimesync) 0.001) 0.1) 1)
        _size = (*f (gameui_anim_pulse 0.2 3.2 2.4`) $game_hud_status_text_size)

        uihlist 0.01 [
            uicolourtext "Team swap in" 0x666666 (*f $_size 0.9)
            uicolourtext (concatword $_time "s") (pulsecolour $PULSE_WARN) $_size
        ]
    ]
]

# ui_game_hud_status_player = [
    local _busy
    _busy = 0

    caseif (>= $game_hud_game_event_balance_time $gametimesync) [
        ui_game_hud_status_team_swap
    ] (= $getclientstate 4) [
        ui_game_hud_status_player_spawn
        _busy = 1
    ] (= $gamemode $G_EDITING) [
        uihlist (*f $game_hud_status_width 0.01) [
            uiaspectimage #(concatword $textkeyprefix (strlower (searchbinds edittoggle [] [] " "))) 0xffffff 0 (*f $game_hud_status_text_size 0.03) (*f $game_hud_status_text_size 0.03)
            uitext "to enter edit mode" (*f $game_hud_status_text_size 1.2)
        ]

        _busy = 1
    ]

    result $_busy
]

shader $SHADER_DEFAULT shdr_gameui_damagetick [
    attribute vec4 vvertex, vcolor;
    attribute vec2 vtexcoord0;
    uniform mat4 hudmatrix;
    varying vec2 texcoord0;
    varying vec4 colorscale;

    void main(void)
    {
        gl_Position = hudmatrix * vvertex;
        texcoord0 = vtexcoord0;
        colorscale = vcolor;
    }
] [
    uniform sampler2D tex0;
    uniform float thickness, from, length;
    varying vec2 texcoord0;
    varying vec4 colorscale;

    fragdata(0) vec4 fragcolor;

    void main()
    {
        // Normalize to coords to [-1, 1]
        vec2 uv = texcoord0.xy * 2.0 - 1.0;
        uv.y = -uv.y;

        float dist = distance(uv, vec2(0.0, 0.0));

        float cross = 1.0 - abs(abs(uv.x) - abs(uv.y));
        cross = smoothstep(cross - thickness, 1.0, cross);
        cross *= smoothstep(from + length, from, dist) * smoothstep(0.0, from, dist);

        fragcolor = vec4(1.0, 1.0, 1.0, cross) * colorscale;
    }
] 1

# ui_game_hud_damagetick = [
    local _anim
    _anim = (clampf (divf (- $lastmillis $lastdamagetick) 100) 0 1)

    uirender shdr_gameui_damagetick 0.2 0.2 [
        uicolourset 0xff4444
        uicolourblend (-f 1.0 $_anim)
        uirenderparam from (lerpf 0.4 0.9 $_anim)
        uirenderparam length (lerpf 0.01 0.4 $_anim)
        uirenderparam thickness (lerpf 0.1 0.02 $_anim)
    ]

    uirender shdr_gameui_damagetick 0.2 0.2 [
        uicolourset #(hsvtohex 45 0.75 1)
        uicolourblend (-f 1.0 $_anim)
        uirenderparam from (lerpf 0.4 0.9 $_anim)
        uirenderparam length (lerpf 0.01 0.4 $_anim)
        uirenderparam thickness (lerpf 0.0125 0.0025 $_anim)
    ]
]

ui_game_hud_status = [
    uivlist 0 [
        // Top zone
        uiclip 1 0.365 0 0 [
            uifill 1 0.365
            ui_game_hud_frags
        ]

        // Bottom zone
        uiclip 1 0.415 0 0 [
            uifill 1 0.415

            if (ui_game_hud_status_player) [] [
                ui_game_hud_affinity
            ]
        ]
    ]
]

game_hud_plugins = []

// 1:<handler>
game_hud_add_plugin = [
    if (! (listhas $game_hud_plugins $arg1)) [
        echo "Adding HUD plugin:" $arg1
        append game_hud_plugins $arg1
    ]
]

// 1:<handler>
game_hud_rem_plugin = [
    local _index
    _index = (listfind=s $game_hud_plugins $arg1)

    if (>= $_index 0) [
        echo "Removing HUD plugin:" $arg1
        game_hud_plugins = (listsplice $game_hud_plugins [] $_index 1)
    ]
]

ui_game_hud_fullscreen = [
    ui_game_hud_dyn_layouts

    ui_game_hud_damagetick

    looplist plugin $game_hud_plugins [
        $plugin
    ]
]
