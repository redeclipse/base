defvarp darkhud 0 2 2

defvarp showfps 0 0 4
defvarp showphys 0 0 1
defvarp showtime 0 1 1
defvarp showtimestyle 0 3 4
defvarp showrealtime 0 0 1
defvarp showevents 0 2 2
defvarp showdeaths 0 2 2

defvarp titleonstart 0 1 1
defvarp titlefadetime 0 3000 $varidxmax

deftvarp ui_hud_statetexs [playertex deadtex editingtex spectatortex waitingtex]
deftvarp ui_hud_statetex2 [playerbliptex deadtex playerbliptex spectatortex deadtex]
defsvarp ui_hud_timecols [red red red red red green yellow orange orange]

defvarp hudskin 0 1 4 // 0:none 1:colour 2:skin 3:skinshadow 4:skin+skinshadow
deffvarp hudskinblend 0.0 0.75 1.0
deffvarp hudskinspace 0 0.00175 $fvaridxmax
defvarp hudskinoverlay 0 0 4 // 0:none 1:colour 2:skin 3:skinshadow 4:skin+skinshadow
deffvarp hudskinoverlayblend 0.0 0.25 1.0
deffvarp hudskinoverlayspace 0 0.0025 $fvaridxmax
defvarp hudskinunderlay 0 3 4 // 0:none 1:colour 2:skin 3:skinshadow 4:skin+skinshadow
deffvarp hudskinunderlayblend 0.0 1 1.0
deffvarp hudskinunderlayspace 0 0.00175 $fvaridxmax
defvarp hudskinbar 0 2 4 // 0:none 1:colour 2:skin 3:skinshadow 4:skin+skinshadow
deffvarp hudskinbarblend 0.0 1.0 1.0

defvarp huddamage 0 1 1
deffvarp huddamagealpha 0 1 1
deffvarp huddamageblend 0 1 1
deffvarp huddamageedge 0 0.1 0.5
deffvarp huddamagefade 0 0.175 1.0

deffvarp hudskinsize $fvaridxnonzero 0.035 $fvaridxmax
deffvarp hudskinscale $fvaridxnonzero 1.5 $fvaridxmax
deffvarp hudskinpad 0 0.0015 $fvaridxmax
deffvarp hudskinpadsmall 0 0.00075 $fvaridxmax
deffvarp hudskinpadlarge 0 0.01 $fvaridxmax
deffvarp hudskinpadtiny 0 0.0003 $fvaridxmax
deffvarp hudskintextscale $fvaridxnonzero 1.3 $fvaridxmax
deffvarp hudskintextsize $fvaridxnonzero 1.4 $fvaridxmax
deffvarp hudskintextsmall $fvaridxnonzero 1.15 $fvaridxmax
deffvarp hudskintextinfo $fvaridxnonzero 0.875 $fvaridxmax
deffvarp hudskintextmain $fvaridxnonzero 1.3 $fvaridxmax
deffvarp hudskintextsuffix $fvaridxnonzero 0.75 $fvaridxmax
deffvarp hudskintextsub $fvaridxnonzero 0.5 $fvaridxmax
deffvarp hudskinpartscale $fvaridxnonzero 7.5 $fvaridxmax
deffvarp hudskinpartoffset 0 0.01 $fvaridxmax
deffvarp hudskinpartspace $fvaridxnonzero 0.0015 $fvaridxmax
deffvarp hudskininfoscale $fvaridxnonzero 2.0 $fvaridxmax
deffvarp hudskinmainscale $fvaridxnonzero 2.5 $fvaridxmax
deffvarp hudskinmainlong $fvaridxnonzero 5 $fvaridxmax

exec "config/ui/hud/radar.cfg"

ui_hud_lastinit = 0

ui_hud_init = [
    uistyle clampxy
    if (!= $ui_hud_lastinit $totalmillis) [
        refreshenginestats
        ui_hud_segment = (minf (divf $uiaspect 3) 0.5)
        ui_hud_segrev = (divf 1.0 $ui_hud_segment)
        ui_hud_clientnum = $playercn
        ui_hud_focus = $focusedplayer
        ui_hud_actor = (getclientactortype $ui_hud_focus)
        ui_hud_model = (getclientmodel $ui_hud_focus)
        ui_hud_state = (getclientstate $ui_hud_focus)
        ui_hud_team = (getclientteam $ui_hud_focus)
        ui_hud_health = (getclienthealth $ui_hud_focus)
        ui_hud_spawnhealth = (getclientspawnhealth $ui_hud_focus)
        if (hasmut $G_M_INSTAGIB) [
            ui_hud_damagelevel = 1
            ui_hud_damagecrit = (= $ui_hud_state $CS_DEAD)
        ] [
            ui_hud_damagelevel = (? (= $ui_hud_state $CS_DEAD) 0.0 (divf $ui_hud_health $ui_hud_spawnhealth))
            ui_hud_damagecrit = (|| (= $ui_hud_state $CS_DEAD) (&& (= $ui_hud_state $CS_ALIVE) (<=f $ui_hud_damagelevel $damagecritical)))
        ]
        ui_hud_hasaffinity = (getclienthasaffinity $ui_hud_focus)
        ui_hud_colour = (? (|| $progresstype (= $ui_hud_state $CS_SPECTATOR)) 0x404040 (getclientcolour $ui_hud_focus $playerdisplaytone $playerdisplaytonelevel $playerdisplaytonemix))
        ui_hud_colour1 = (modcolour $ui_hud_colour 2.0)
        ui_hud_colour2 = (modcolour $ui_hud_colour 0.5)
        case $darkhud 0 [
            ui_hud_colour = (modcolour $ui_hud_colour 0.75)
            ui_hud_colour1 = (modcolour $ui_hud_colour1 0.75)
            ui_hud_colour2 = (modcolour $ui_hud_colour2 0.75)
        ] 1 [
            ui_hud_colour = (modcolour $ui_hud_colour 0.5)
            ui_hud_colour1 = (modcolour $ui_hud_colour1 0.5)
            ui_hud_colour2 = (modcolour $ui_hud_colour2 0.5)
        ] 2 [
            ui_hud_colour = (modcolour $ui_hud_colour 0.25)
            ui_hud_colour1 = (modcolour $ui_hud_colour1 0.25)
            ui_hud_colour2 = (modcolour $ui_hud_colour2 0.25)
        ]
        ui_hud_lastinit = $totalmillis
    ]

    uiclip 0 0 0 0 [
        uiclipforced 1
        uifont $textfontoutline [ uitext "Dummy" $ui_texttiny [ ui_hud_texttiny = $uilasth ] ]
    ]
]

timer_update_proc_enabled = 0

timer_update_proc = [
    ui_hud_timers_type = (updatetimers)

    if (&& $timer $ui_hud_timers_type) [
        timer_update_proc_enabled = 1
        sleep 100 [timer_update_proc]
    ] [
        timer_update_proc_enabled = 0
    ]
]

ui_hud_timers = [
    if $timer_update_proc_enabled [] [
        timer_update_proc
    ]

    if $ui_hud_timers_type [
        uicolour 0 0 0 [
            uistyle lefttop

            uispace $ui_padnormal $ui_padnormal [
                uivlist 0 [
                    if $frametimer [
                        uispace $ui_padtiny $ui_padtiny [
                            uivlist 0 [
                                uitext "Frame Time" $ui_texttiny [uicolourset $colouryellow]
                                uitext (concat (gettimer -1 1) "ms") $ui_texttiny [uitextlimit 1]
                            ]
                        ]
                    ]
                    if $timer [
                        local _timer_name
                        ui_hud_timers_count = (gettimer -1 -1)
                        uigrid 2 $ui_padnormal $ui_padtiny [
                            loop i $ui_hud_timers_count [
                                if (gettimer $i -2) [] [
                                    _timer_name = (concatword "^fa" (gettimer $i 0) (? (gettimer $i 1) " ^fG(gpu)" " ^fY(cpu)"))

                                    uitext $_timer_name $ui_textxtiny [uistyle rightmiddle]
                                    uitext (concat (precf (gettimer $i 6) 2) "ms") $ui_textxtiny
                                ]
                            ]
                        ]
                    ]
                ]
            ]
        ]
    ]
]

ui_hud_barcount = 0
ui_hud_barcolour = [ result (? (= (mod $ui_hud_barcount 2) (? $arg1 1 0)) $ui_hud_colour2 $ui_hud_colour) ]

// 1:colour 2:width 3:height 4:common 5:children 6:space 7:type 8:blend 9:scale
ui_hud_skin = [
    if (=s $arg6 "") [arg6 = $hudskinspace]
    if (=s $arg7 "") [arg7 = $hudskin]
    if (=s $arg8 "") [arg8 = $hudskinblend]
    if (=s $arg9 "") [arg9 = 1.0]
    case $arg7 1 [
        uicolour $arg1 $arg2 $arg3 [
            if $arg4 [doargs $arg4]
            uicolourblend $arg8
            if $arg5 [
                uigroup [
                    uistyle clampxy
                    if $arg4 [doargs $arg4]
                    if (>f $arg6 0.0) [
                        uispace $arg6 $arg6 [
                            uistyle clampxy
                            doargs $arg5
                        ]
                    ] [
                        doargs $arg5
                    ]
                ]
            ]
        ]
   ] 2 [
        uiborderedimageclamped $skintex $arg1 0 $ui_texborder (*f $ui_screenborder $arg9) $arg2 $arg3 [
            if $arg4 [doargs $arg4]
            uicolourblend $arg8
            if $arg5 [
                uigroup [
                    uistyle clampxy
                    if $arg4 [doargs $arg4]
                    if (>f $arg6 0.0) [
                        uispace $arg6 $arg6 [
                            uistyle clampxy
                            doargs $arg5
                        ]
                    ] [
                        doargs $arg5
                    ]
                ]
            ]
        ]
   ] 3 [
        uiborderedimageclamped $skinshadowtex $arg1 0 $ui_texborder (*f $ui_screenborder $arg9) $arg2 $arg3 [
            if $arg4 [doargs $arg4]
            uicolourblend $arg8
            if $arg5 [
                uigroup [
                    uistyle clampxy
                    if $arg4 [doargs $arg4]
                    if (>f $arg6 0.0) [
                        uispace $arg6 $arg6 [
                            uistyle clampxy
                            doargs $arg5
                        ]
                    ] [
                        doargs $arg5
                    ]
                ]
            ]
        ]
    ] 4 [
        uiborderedimageclamped $skinalphatex $arg1 0 $ui_texborder (*f $ui_screenborder $arg9) $arg2 $arg3 [
            if $arg4 [doargs $arg4]
            uicolourblend $arg8
            if $arg5 [
                uigroup [
                    uistyle clampxy
                    if $arg4 [doargs $arg4]
                    if (>f $arg6 0.0) [
                        uispace $arg6 $arg6 [
                            uistyle clampxy
                            doargs $arg5
                        ]
                    ] [
                        doargs $arg5
                    ]
                ]
            ]
            uiborderedimageclamped $skinshadowtex (modcolour $arg1 2.0) 0 $ui_texborder (*f $ui_screenborder $arg9) $arg2 $arg3 [
                if $arg4 [doargs $arg4]
                uicolourblend $arg8
            ]
        ]
     ] () [
        uifill $arg2 $arg3 [
            if $arg4 [doargs $arg4]
            if $arg5 [
                uigroup [
                    uistyle clampxy
                    if $arg4 [doargs $arg4]
                    if (>f $arg6 0.0) [
                        uispace $arg6 $arg6 [
                            uistyle clampxy
                            doargs $arg5
                        ]
                    ] [
                        doargs $arg5
                    ]
                ]
            ]
        ]
    ]
]

// 1:icon 2:iconcolour 3:amount 4:amtcolour 5:text 6:textcolour 7:altbar 8:segments 9:maxsegs 10:segcolour 11:dir
ui_hud_baricon = [
    if (! (mod $arg7 2)) [
        ui_hud_skin (ui_hud_barcolour) $hudskinsize $hudskinsize [] [
            uiimage $arg1 $arg2 0 (-f $hudskinsize (*f $hudskinspace 2)) (-f $hudskinsize (*f $hudskinspace 2))
        ]
    ]
]

ui_hud_barbody = [
    if (! (mod $arg7 2)) [
        local partscale
        partscale = (*f $hudskinsize $hudskinpartscale)
        if (|| (= $arg7 4) (! $arg9)) [ partscale = (+f $partscale (*f $hudskinsize $hudskintextscale)) ]
        ui_hud_skin (ui_hud_barcolour) $partscale $hudskinsize [] [
            uistyle (? $arg11 rightmiddle leftmiddle)
            local curwidth curheight
            curwidth = (-f $partscale (*f $hudskinspace 3) $hudskinpartoffset)
            curheight = (-f $hudskinsize (*f $hudskinspace 2) $hudskinpartoffset)
            uispace (*f $hudskinpartoffset 0.5) (*f $hudskinpartoffset 0.5) [
                uistyle (? $arg11 rightmiddle leftmiddle)
                uivlist $hudskinpartspace [
                    uistyle (? $arg11 rightmiddle leftmiddle)
                    local hasbar
                    hasbar = (>=f $arg3 0)
                    if $arg9 [
                        if $hasbar [ curheight = (-f (*f $curheight 0.5) $hudskinpartspace) ]
                        uihlist $hudskinpartspace [
                            uistyle (? $arg11 rightmiddle leftmiddle)
                            if $arg8 [
                                if (> $arg9 10) [
                                    ui_hud_skin (modcolour $arg10 0.5) (*f $curwidth (divf $arg8 $arg9)) $curheight [uistyle (? $arg11 rightmiddle leftmiddle)] [] 0 $hudskinbar $hudskinbarblend 0
                                ] [
                                    local segwidth segment
                                    segwidth = (+f (-f $curwidth (*f (*f $hudskinpartspace 2.0) (- $arg9 1))) $hudskinpartspace)
                                    segment = (divf $segwidth $arg9)
                                    loop i $arg8 [
                                        if $i [ uifill 0 $curheight [uistyle (? $arg11 rightmiddle leftmiddle)] ]
                                        ui_hud_skin (modcolour $arg10 0.5) $segment $curheight [uistyle (? $arg11 rightmiddle leftmiddle)] [] 0 $hudskinbar $hudskinbarblend 0
                                    ]
                                ]
                            ]  [
                                if $hasbar [ uifill $curwidth $curheight [uistyle (? $arg11 rightmiddle leftmiddle)] ]
                            ]
                        ]
                        if $hasbar [ uifill $curwidth 0 [uistyle (? $arg11 rightmiddle leftmiddle)] ]
                    ]
                    if $hasbar [
                        if (>f $arg3 0.0) [
                            local barwidth
                            barwidth = (*f (clampf $arg3 0.0 1.0) $curwidth)
                            ui_hud_skin $arg4 $barwidth $curheight [uistyle (? $arg11 rightmiddle leftmiddle)] [
                                uistyle (? $arg11 rightmiddle leftmiddle)
                                if (>f $arg3 1.0) [
                                    barwidth = (*f (modf $arg3 1.0) $curwidth)
                                    ui_hud_skin $colourwhite (-f $barwidth 0.005) (-f $curheight 0.005) [uistyle (? $arg11 rightmiddle leftmiddle)] [] 0 $hudskinbar $hudskinbarblend 0
                                ]
                            ] 0 $hudskinbar $hudskinbarblend 0
                        ] [
                            uifill $curwidth $curheight [uistyle (? $arg11 rightmiddle leftmiddle)]
                        ]
                    ]
                ]
            ]
        ]
    ]
]

ui_hud_barinfo = [
    case $arg7 0 [
        ui_hud_skin (ui_hud_barcolour) (*f $hudskinsize $hudskintextscale) $hudskinsize [] [
            if $arg9 [
                uihlist 0 [
                    uistyle clampy
                    uitext $arg8 $hudskintextsmall [
                        uistyle (? $arg11 righttop lefttop)
                        uitextlimit 1
                        uicolourset $arg6
                    ]
                    uitext "/" $hudskintextsmall [
                        uistyle (? $arg11 rightmiddle leftmiddle)
                        uitextlimit 1
                        uicolourset (modcolour $arg6 0.5)
                    ]
                    uitext $arg5 $hudskintextsmall [
                        uistyle (? $arg11 rightbottom leftbottom)
                        uitextlimit 1
                        uicolourset $arg6
                    ]
                ]
            ] [
                uitext $arg5 $hudskintextsize [
                    uitextlimit 1
                    uicolourset $arg6
                ]
            ]
        ]
    ] 1 [
        if $arg9 [
            ui_hud_skin (ui_hud_barcolour) (*f $hudskinsize $hudskintextscale 2.0) $hudskinsize [uistyle (? $arg11 rightbottom leftbottom)] [
                uitext $arg5 $hudskintextsize [
                    uitextlimit 1
                    uicolourset $arg6
                ]
            ]
        ]
    ] 2 [
        ui_hud_skin (ui_hud_barcolour) (*f $hudskinsize $hudskintextscale) $hudskinsize [uistyle (? $arg11 rightbottom leftbottom)] [
            uitext (? $arg9 $arg8 $arg5) $hudskintextsize [
                uitextlimit 1
                uicolourset $arg6
            ]
        ]
    ] 3 [
        ui_hud_skin (ui_hud_barcolour) (*f $hudskinsize $hudskintextscale 2.0) (*f $hudskinsize 2.0) [uistyle (? $arg11 rightbottom leftbottom)] [
            if $arg9 [
                uivlist 0 [
                    uifill (-f (*f $hudskinsize $hudskintextscale 2.0) $hudskinspace) 0
                    uitext $arg8 (*f $hudskintextsize 0.75) [
                        uitextlimit 1
                        uicolourset $arg6
                    ]
                    uitext $arg5 (*f $hudskintextsize 1.45) [
                        uitextlimit 1
                        uicolourset $arg6
                    ]
                ]
            ] [
                uitext $arg5 (*f $hudskintextsize 2.0) [
                    uitextlimit 1
                    uicolourset $arg6
                ]
            ]
        ]
    ]
]

ui_hud_container = [
    local align callback
    align = (? (=s $arg1 "") "centermiddle" $arg1)
    callback = $arg2
    uigroup [
        uistyle $align
        if (|| $hudskinunderlay $hudskinoverlay) [
            if $hudskinunderlay [
                ui_hud_skin $ui_hud_colour2 0 0 [] @callback (*f $hudskinunderlayspace 0.5) $hudskinunderlay $hudskinunderlayblend
            ] [
                if $hudskinoverlay [ uispace (*f $hudskinoverlayspace 0.5) (*f $hudskinoverlayspace 0.5) @callback ]
            ]
            if $hudskinoverlay [
                ui_hud_skin $ui_hud_colour 0 0 [ uistyle clampxy ] [] 0 $hudskinoverlay $hudskinoverlayblend
            ]
        ] [
            @callback
        ]
    ]
]

ui_hud_leftbottom = [
    uivlist $hudskinpadsmall [
        uistyle leftbottom
        case $ui_hud_state $CS_ALIVE [
            ui_game_hud_player
        ]
    ]
]

ui_hud_centertime = [
    uihlist 0 [
        if $showtime [
            ui_hud_skin $ui_hud_colour (*f $hudskinsize $hudskinmainlong) (*f $hudskinsize 2.0) [] [
                uivlist 0 [
                    uifill (-f (*f $hudskinsize $hudskinmainlong) (*f $hudskinspace 2.0)) 0
                    caseif $gamepaused [
                        uitext "Game Paused" 1 [uitextlimit 1; uicolourset $colourorange]
                    ] (= $gamemode $G_EDITING) [
                        uitext (at $MPV_NAMES $mapvariant) $hudskintextmain [uitextlimit 1; uicolourset $colourgreen]
                        uitext "Editing" $hudskintextsub [uitextlimit 1]
                    ] () [
                        ui_hud_timeremain = $gametimeremain
                        ui_hud_timeelapsed = $gametimeelapsed
                        ui_hud_timecolour = (at $ui_hud_timecols $gamestate)
                        if (getgametimelimit) [
                            uitext (timestr $ui_hud_timeremain $showtimestyle) $hudskintextmain [uitextlimit 1; uicolourset (? (|| (!= $gamestate 5) (< $ui_hud_timeremain 60000)) (getclientpulsecolour $ui_hud_focus $PULSE_WARN) $[colour@[ui_hud_timecolour]])]
                        ] [
                            uitext (timestr $ui_hud_timeelapsed $showtimestyle) $hudskintextmain [uitextlimit 1; uicolourset $[colour@[ui_hud_timecolour]]]
                        ]
                        uitext (? (= $gamestate $G_S_PLAYING) (? (getgametimelimit) "Remaining" "Elapsed") (at $G_S_NAMES $gamestate)) $hudskintextinfo [uitextlimit 1]
                    ]
                ]
            ]
        ]
        if $showrealtime [
            ui_hud_skin $ui_hud_colour (*f $hudskinsize $hudskinmainlong) $hudskinsize [] [
                uivlist 0 [
                    uifill (-f (*f $hudskinsize $hudskinmainlong) (*f $hudskinspace 2.0)) 0
                    uitext (at (gettime) 1) $hudskintextinfo [uitextlimit 1; uicolourset $colouryellow]
                    uitext (at (gettime) 0) $hudskintextsub [uitextlimit 1]
                ]
            ]
        ]
    ]
]

ui_hud_centertop = [
    uivlist $hudskinpadsmall [
        uistyle centertop
        ui_game_hud_match
    ]
]

ui_hud_centerbottom = [
    uivlist $hudskinpadsmall [
        uistyle centerbottom
        if $showbearing [ ui_hud_bearing ]
    ]
]

ui_hud_centermiddle = [
    if (&& $showradar (= $ui_hud_state $CS_ALIVE)) [ ui_hud_midradar ]
]

ui_hud_gamestatus = [ ui_game_hud_status ]

ui_hud_showfps = [
    uiimage $glowtex 0x88000000 0 0 0 [
        uistyle $arg1

        uispace 0.02 0.01 [
            uihlist 0 [
                doif (>= $showfps 1) [
                    uivlist 0 [
                        uifill (-f $hudskinsize (*f $hudskinspace 2.0)) 0
                        uitext (getenginestat 11) $hudskintextinfo [uitextlimit 1; uicolourset $colouryellow]
                        uitext "FPS" $hudskintextsub [uitextlimit 1]
                    ]
                ] (= $showfps 2) [
                    uivlist 0 [
                        uifill (-f $hudskinsize (*f $hudskinspace 2.0)) 0
                        uitext (getenginestat 12) $hudskintextinfo [uitextlimit 1; uicolourset $colouryellow]
                        uitext "SUB" $hudskintextsub [uitextlimit 1]
                    ]
                    uivlist 0 [
                        uifill (-f $hudskinsize (*f $hudskinspace 2.0)) 0
                        uitext (getenginestat 13) $hudskintextinfo [uitextlimit 1; uicolourset $colouryellow]
                        uitext "ADD" $hudskintextsub [uitextlimit 1]
                    ]
                ] (= $showfps 3) [
                    uivlist 0 [
                        uifill (-f $hudskinsize (*f $hudskinspace 2.0)) 0
                        uitext (- (getenginestat 11) (getenginestat 13)) $hudskintextinfo [uitextlimit 1; uicolourset $colouryellow]
                        uitext "MIN" $hudskintextsub [uitextlimit 1]
                    ]
                    uivlist 0 [
                        uifill (-f $hudskinsize (*f $hudskinspace 2.0)) 0
                        uitext (+ (getenginestat 11) (getenginestat 12)) $hudskintextinfo [uitextlimit 1; uicolourset $colouryellow]
                        uitext "MAX" $hudskintextsub [uitextlimit 1]
                    ]
                ] (= $showfps 4) [
                    uivlist 0 [
                        uifill (-f $hudskinsize (*f $hudskinspace 2.0)) 0
                        uihlist 0 [
                            uitext (div 1000 (getenginestat 11)) $hudskintextinfo [uitextlimit 1; uicolourset $colouryellow]
                            uitext "ms" $hudskintextsub [uitextlimit 1]
                        ]
                        uitext "AVG" $hudskintextsub [uitextlimit 1]
                    ]
                    uivlist 0 [
                        uifill (-f $hudskinsize (*f $hudskinspace 2.0)) 0
                        uihlist 0 [
                            uitext (div 1000 (- (getenginestat 11) (getenginestat 13))) $hudskintextinfo [uitextlimit 1; uicolourset $colouryellow]
                            uitext "ms" $hudskintextsub [uitextlimit 1]
                        ]
                        uitext "MAX" $hudskintextsub [uitextlimit 1]
                    ]
                ]
            ]
        ]
    ]
]

ui_hud_rightbottom = [
    uivlist $hudskinpadsmall [
        uistyle rightbottom
         case $ui_hud_state $CS_ALIVE [
            ui_game_hud_weapon
        ]
   ]
]

ui_hud_lefttop = [
    uivlist $hudskinpadlarge [
        uistyle lefttop
        uistyle clampx
        if (>= $showconsole (? (isediting) 1 2)) [
            uifont $textfontoutline [
                uistyle lefttop
                uistyle clampx
                uivlist 0 [
                    uistyle lefttop
                    uistyle clampx
                    if $condebuglinesamt [
                        ui_console_draw $condebuglinesamt $condebugouttime $condebugfadetime $condebugintime $condebugblend $ui_hud_segment $ui_textsmaller
                    ]
                    if $coneventlinesamt [
                        ui_console_draw $coneventlinesamt $coneventouttime $coneventfadetime $coneventintime $coneventblend $ui_hud_segment $ui_textsmaller
                    ]
                ]
            ]
        ]
        if $showevents [ ui_hud_events ]
    ]
]

ui_hud_chathistory = [
    uivlist $hudskinpadsmall [
        uistyle lefttop
        ui_gameui_chat
    ]
]

ui_hud_showphys = [
    local _len _delay _timer _timer2 _amt1 _amt2 _name _value
    ui_hud_skin $ui_hud_colour $hudskinsize $hudskinsize [] [
        uitable 0.05 0 [
            uitablerow [
                uispace 0.0005 0.0005 [ uitext (at $PHYS_NAMES (getclientphysstate $focusedplayer)) 0.8 ]
                uispace 0.0005 0.0005 [ uitext (at $IM_T_NAMES (getclientimpulsetype $focusedplayer)) 0.8 ]
            ]
            uitablerow [
                uispace 0.0005 0.0005 [ uitext (? (getclientairtime $focusedplayer) "In Air" "On Floor") 0.8 ]
                uispace 0.0005 0.0005 [ uitext (? (getclientairtime $focusedplayer) (getclientairtime $focusedplayer) (getclientfloortime $focusedplayer)) 0.8 ]
            ]
            uitablerow [
                uispace 0.0005 0.0005 [ uitext (? (getclientslide $focusedplayer) "Sliding" "Normal") 0.8 ]
                uispace 0.0005 0.0005 [ uitext (? (getclientregenimpulse $focusedplayer) "Regen" "Wait") 0.8 ]
            ]
            uitablerow [] [ uispace 0.0005 0.0005 [ uistyle clampx; uiline 0x000000 0 0 [uistyle clampx] ] ]
            loop i $IM_MAX [
                _name = (at $IM_NAMES $i)
                _value = (getclientimpulse $focusedplayer $i)
                uitablerow [
                    uispace 0.0005 0.0005 [ uitext $_name 0.6 [uistyle rightmiddle] ]
                    uispace 0.0005 0.0005 [ uitext $_value 0.6 [uistyle leftmiddle] ]
                ]
            ]
            loop i $IM_T_MAX [
                _name = (at $IM_T_NAMES $i)
                _value = (getclientimpulsetime $focusedplayer $i)
                _len = (getclientimpulsetimer $focusedplayer $i 1 0 3)
                _delay = (getclientimpulsetimer $focusedplayer $i 1 1 3)
                _timer1 = (getclientimpulsetimer $focusedplayer $i 1 0 1)
                _timer2 = (getclientimpulsetimer $focusedplayer $i 1 1 1)
                _amt1 = (? [> $_len 0] (-f 1.0 (divf $_timer1 $_len)) 0.0)
                _amt2 = (? [> $_delay 0] (-f 1.0 (divf $_timer2 $_delay)) 0.0)
                uitablerow [] [ uispace 0.0005 0.0005 [ uistyle clampx; uiline 0x000000 0 0 [uistyle clampx] ] ]
                uitablerow [
                    uispace 0.0005 0.0005 [
                        uitext $_name 0.6 [
                            uistyle rightmiddle
                            uicolourset (? (getclientcanimpulse $focusedplayer $i) $colourgreen $colourorange)
                        ]
                    ]
                    uispace 0.0005 0.0005 [ uitext $_value 0.6 [uistyle leftmiddle] ]
                ]
                uitablerow [
                    uispace 0.0005 0.0005 [ uitext $_len 0.6 [uistyle rightmiddle] ]
                    uispace 0.0005 0.0005 [ uitext $_delay 0.6 [uistyle leftmiddle] ]
                ]
                uitablerow [
                    uispace 0.0005 0.0005 [ uicolour 0x40F040 (*f 0.075 $_amt1) 0.005 [uistyle rightmiddle] ]
                    uispace 0.0005 0.0005 [ uicolour 0xF04040 (*f 0.075 $_amt2) 0.005 [uistyle leftmiddle] ]
                ]
            ]
            uitablerow [
                uispace 0.0005 0.0005 [ uitext "Sprint" 0.8 ]
                uispace 0.0005 0.0005 [ uitext (getclientsprinttime $focusedplayer) 0.8 ]
            ]
            uitablerow [
                uispace 0.0005 0.0005 [ uitext  "RotVel" 0.8 ]
                uispace 0.0005 0.0005 [ uitext (substr (getclientrotvelx $focusedplayer) 0 5) 0.8 ]
            ]
        ]
    ]
]

ui_hud_righttop = [
    uivlist $hudskinpadsmall [
        uistyle righttop
        uistyle clampx
        if $showminimap [ ui_hud_minimap ]
        if (&& [! $visorhud] $showfps) [ ui_hud_showfps righttop ]
        if $showphys [ ui_hud_container righttop ui_hud_showphys ]
        if $showdeaths [ ui_hud_deaths ]
    ]
]

ui_hud_space = [
    uifill 0 (*f $arg3 0.1)
]

ui_hud_toolcheck = [
    if (isediting) [
        uifill 0 $ui_toolbar_height
    ]
]

ui_hud_pos = [
    if $arg1 [] [arg1 = "leftbottom"]
    if $arg2 [] [arg2 = $arg1]
    if $arg3 [] [arg3 = $ui_hud_segment]
    uifill $arg3 $arg3 [
        uistyle $arg1
        uispace $ui_padhud $ui_padhud [
            uistyle $arg1
            uivlist $ui_padsmall [
                uistyle $arg1
                if $arg4 [doargs $arg4]
                looplist target $arg2 [[ui_hud_@target] [@@@@arg1] [@@@@arg2] [@@@@arg3]]
            ]
        ]
    ]
]

ui_hud_headbody = [
    ui_hud_pos lefttop [toolcheck lefttop]
    ui_hud_pos leftbottom [chathistory leftbottom]
    ui_hud_pos centertop
    ui_hud_pos centerbottom
    ui_hud_pos righttop
    ui_hud_pos rightbottom
    ui_hud_pos centermiddle
    ui_hud_pos centermiddle [gamestatus]
    ui_game_hud_fullscreen
]

ui_hud_progress = [
    local hud_title
    hud_title = 0.0

    if (&& $titleonstart [! $uihasmenu] (= $progresstype $PROGRESS_GAMESTATE) (< $gamestate $G_S_PLAYING) (> $gametimewait 0) (> $titlefadetime 0) (<= $gamemapelapsed $titlefadetime)) [
        hud_title = (-f 1.0 (divf $gamemapelapsed $titlefadetime))
    ]

    local hud_desc hud_tipstr
    hud_desc = (at $G_S_NAMES $gamestate)
    hud_tipstr = "Press ^fs^fw^f{=1:spectate 0}^fS to join the match"

    caseif $gametimeremain [
        hud_desc = (concatword $hud_desc ": ^fg" (timestr $gametimeremain $showtimestyle))
    ] (>= $gamestate $G_S_INTERMISSION) [
        hud_tipstr = (tipshow)
    ]

    ui_progress $progresstype $hud_title $gametimeprogress $hud_desc $hud_tipstr [
        ui_hud_pos lefttop [lefttop]
    ] [
        ui_hud_pos leftbottom [chathistory]
    ] 0
]

ui_hud_allow = [ result (&& $isconnected $showhud [! $uihasmenu]) ]

newui "hud" $SURFACE_VISOR [
    ui_hud_init

    if (ui_hud_allow) [
        uiallowinput (? $gameui_chat_typing 1 0)
        uigroup [
            uistyle clampxy
            caseif (isediting) [
                ui_hud_pos lefttop [toolcheck lefttop]
            ] $progresstype [
                ui_hud_progress
            ] () [
                uifill (minf (get game_hud_maxaspect) $uiaspect) 0 [
                    uistyle clampy
                    ui_hud_headbody
                ]
            ]
        ]
    ]
]

newui "hud" $SURFACE_FOREGROUND [
    ui_hud_init

    if (ui_hud_allow) [
        if (isediting) [
            uiallowinput (? $ui_freecursor 2 0)
            uigroup [
                uistyle clampxy
                ui_hud_toolview
            ]
        ] [
            uigroup [
                uistyle clampxy
                if (&& $visorhud $showfps) [ ui_hud_showfps centerbottom ]
            ]
        ]
    ]

    ui_hud_timers
]

shader $SHADER_DEFAULT "huddamage" [
    attribute vec4 vvertex, vcolor;
    attribute vec2 vtexcoord0;
    uniform mat4 hudmatrix;
    varying vec2 texcoord0;
    varying vec4 colorscale;

    void main(void)
    {
        gl_Position = hudmatrix * vvertex;
        texcoord0 = vtexcoord0;
        colorscale = vcolor;
    }
] [
    uniform sampler2D tex0;
    uniform vec2 player; // posx posy
    uniform vec4 params; // noise offx offy mul
    uniform vec2 texsize; // width height
    uniform vec4 edgesize; // x y x2 y2
    uniform vec2 edgesizeinv; // x y
    uniform vec4 curmillis;
    varying vec2 texcoord0;
    varying vec4 colorscale;

    fragdata(0) vec4 fragcolor;

    float rand(vec2 co) { return fract(sin(dot(co.xy, vec2(12.9898, 78.233)))*43758.5453); }

    void main()
    {
        vec2 curdist = vec2(0.0);

        if(texcoord0.x < edgesize.x) curdist.x = edgesize.x - texcoord0.x;
        else if(texcoord0.x > edgesize.z) curdist.x = texcoord0.x - edgesize.z;
        if(texcoord0.y < edgesize.y) curdist.y = edgesize.y - texcoord0.y;
        else if(texcoord0.y > edgesize.w) curdist.y = texcoord0.y - edgesize.w;

        if(curdist.x <= 0.0 && curdist.y <= 0.0) discard;
        curdist *= edgesizeinv;

        float dist = (1.0 - distance(texcoord0, player) * 0.5) * max(curdist.x, curdist.y);
        if(dist <= 0.0) discard;

        vec2 noise = vec2(0.5 - rand(vec2(texcoord0 - curmillis.x)) * params.x, 0.5 - rand(vec2(texcoord0 + curmillis.x)) * params.x);
        vec4 diffuse = (texture2D(tex0, (texcoord0 - params.yz + noise) * texsize.xy) + texture2D(tex0, (texcoord0 - params.yz - noise) * texsize.xy)) * 0.5;

        diffuse.rgb *= diffuse.a * params.w;
        diffuse.a *= dist;
        if(diffuse.a <= 0.0) discard;

        fragcolor = diffuse * colorscale;
    }
]

ui_hud_damage = [
    local _invaspect _edgesize1 _edgesize2 _edgesize3 _edgesize4 _edgesizeinv1 _edgesizeinv2
    _invaspect = (divf 1.0 $uiaspect)
    _edgesize1 = (*f $_invaspect $huddamageedge)
    _edgesize2 = $huddamageedge
    _edgesize3 = (-f 1.0 (*f $_invaspect $huddamageedge))
    _edgesize4 = (-f 1.0 $huddamageedge)
    _edgesizeinv1 = (divf $huddamagefade (*f $_invaspect $huddamageedge))
    _edgesizeinv2 = (divf $huddamagefade $huddamageedge)

    loopdamagerevif 0 0 player_curdamage [= (getdamageclient $player_curdamage) $focusedplayer] [
        local player_from player_spawnhealth player_totaldamage player_damagelevel player_damageblend player_damageready
        player_from = (getdamagefrom $player_curdamage)
        player_spawnhealth = (getclientspawnhealth $player_curdamage)
        player_totaldamage = (getdamageamt $player_curdamage)
        player_damagelevel = (clampf (divf $player_totaldamage $player_spawnhealth) 0.1 1.0)
        player_damagedirxy = (? (= $focusedplayer $player_from) "0 -1" (getclientradardirxy $player_from))
        player_damageready = (getdamageready $player_curdamage)
        player_damagetexsz = 1.0

        local player_damagemillis
        player_damagemillis = (getdamagemillis $player_curdamage)
        if $player_damageready [
            local player_damagetime player_damagelength
            player_damagetime = (- $totalmillis $player_damageready)
            player_damagelength = (getdamagelength $player_curdamage)
            player_damageblend = (clampf (-f 1.0 (divf $player_damagetime $player_damagelength)) 0.0 1.0)
        ] [
            player_damageblend = 1.0
        ]

        local player_damagecolour player_damagetex player_damagenoise player_damagemovex player_damagemovey player_damagemul
        case (getdamagetype $player_curdamage) 0 [
            player_damagecolour = (skewcolour $colourred (getclientpulsecolour $focusedplayer $PULSE_ALERT) (*f $player_damagelevel $player_damageblend 2.0))
            player_damagetex = "<grey>textures/damage/hurt"
            player_damagenoise = (*f $player_damagelevel 0.05)
            player_damagemovex = (divf $player_damagemillis 3000)
            player_damagemovey = (+f (divf (-f $totalmillis $player_damagemillis) 10000) $player_damageblend 0.1)
            player_damagemul = 2.5
        ] 1 [
            player_damagecolour = (getclientpulsecolour $focusedplayer $PULSE_BURN)
            player_damagetex = "<grey>textures/damage/burn"
            player_damagenoise = (*f $player_damagelevel 0.05)
            player_damagemovex = (divf $player_damagemillis 2000)
            player_damagemovey = (+f (divf (-f $totalmillis $player_damagemillis) 10000) $player_damageblend $player_damageblend)
            player_damagetexsz = 0.5
            player_damagemul = 1.5
        ] 2 [
            player_damagecolour = (getclientpulsecolour $focusedplayer $PULSE_BLEED)
            player_damagetex = "<grey>textures/damage/bleed"
            player_damagenoise = (*f $player_damagelevel 0.025)
            player_damagemovex = (divf $player_damagemillis 10000)
            player_damagemovey = (-f 0.0 (+f (divf (-f $totalmillis $player_damagemillis) 10000) $player_damageblend))
            player_damagetexsz = 0.5
            player_damagemul = 1.5
        ] 3 [
            player_damagecolour = (getclientpulsecolour $focusedplayer $PULSE_SHOCK)
            player_damagetex = "<grey>textures/damage/shock"
            player_damagenoise = (*f $player_damagelevel 0.05)
            player_damagemovex = (divf $player_damagemillis 2000)
            player_damagemovey = (+f (divf (-f $totalmillis $player_damagemillis) 10000) $player_damageblend $player_damageblend)
            player_damagetexsz = 2.0
            player_damagemul = 2.0
        ] 4 [
            player_damagecolour = (getclientpulsecolour $focusedplayer $PULSE_CORRODE)
            player_damagetex = "<grey>textures/damage/corrode"
            player_damagenoise = (*f $player_damagelevel 0.025)
            player_damagemovex = (divf $player_damagemillis 10000)
            player_damagemovey = (-f 0.0 (+f (divf (-f $totalmillis $player_damagemillis) 10000) $player_damageblend))
            player_damagetexsz = 2.0
            player_damagemul = 1.0
        ]

        if (mod $player_damagemillis 2) [
            player_damagemovex = (+f $player_damagemovex $player_damagelevel (*f $player_damageblend 0.5))
        ] [
            player_damagemovex = (-f $player_damagemovex $player_damagelevel (*f $player_damageblend 0.5))
        ]

        uirender huddamage 0 0 [
            uistyle clampxy
            uicolourset $player_damagecolour
            uicolourblend (*f $player_damageblend $huddamagealpha)
            uirenderparam player (-f 0.0 (at $player_damagedirxy 0)) (-f 0.0 (at $player_damagedirxy 1))
            uirenderparam params $player_damagenoise $player_damagemovex $player_damagemovey $player_damagemul
            uirenderparam texsize $player_damagetexsz $player_damagetexsz
            uirenderparam edgesize $_edgesize1 $_edgesize2 $_edgesize3 $_edgesize4
            uirenderparam edgesizeinv $_edgesizeinv1 $_edgesizeinv2
            uirendertex $player_damagetex 0x300
        ]
    ]
]

newui "hud" $SURFACE_BACKGROUND [
    ui_hud_init

    if (ui_hud_allow) [
        uigroup [
            uistyle clampxy
            if (&& $huddamage [! (isediting)]) [ ui_hud_damage ]
            uipropagate [ uicolourblend $huddamageblend ]
        ]
    ]
]
