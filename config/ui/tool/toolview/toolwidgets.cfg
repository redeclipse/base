TC_PROP_ID         = 0
TC_PROP_DESC       = 1
TC_PROP_TAGS       = 2
TC_PROP_GOTO_PARAM = 3

tool_control_categories     = []
tool_num_control_categories = 0

tool_control_autoscroll_last_dist = -1
tool_control_autoscroll_offset    = 0
tool_control_autoscroll           = 0
tool_control_focus                = -1
tool_control_focus_millis         = 0

defvarp tool_widget_flash_time 100 5000 10000

// 1:<description> 2:<tags> 3:<category> 4:<goto param>
tool_register_control = [
    local _ctrl _storage_var _num_var
    _ctrl             = [@tool_last_id [@@arg1] [@@arg2] @arg4]
    _storage_var      = [tool_controls_@arg3]
    _num_var          = [tool_num_controls_@arg3]

    if (listhas $tool_control_categories $arg3) [] [
        append tool_control_categories $arg3
        tool_num_control_categories = (+ $tool_num_control_categories 1)
        $_storage_var               = []
        $_num_var                   = 0
    ]

    append $_storage_var [[@@_ctrl]]
    $_num_var = (+ $$_num_var 1)
]

// 1:<control idx> 2:<category>
tool_goto_control = [
    local _storage_var _control _goto_param _goto
    _storage_var = [tool_controls_@arg2]
    _control     = (at $$_storage_var $arg1)
    _goto_param  = (at $_control $TC_PROP_GOTO_PARAM)
    _goto        = [tool_goto_control_@arg2]

    $_goto $_goto_param

    tool_control_autoscroll_last_dist = -1
    tool_control_autoscroll_offset    = 0
    tool_control_autoscroll           = 1
    tool_control_focus_millis         = (getmillis)
    tool_control_focus                = (at $_control $TC_PROP_ID)
]

tool_control_do_highlight = [
    ui_tool_interactable_flash $tool_control_focus_millis [
        p_length       = $tool_widget_flash_time
        p_flash_colour = $ui_tool_sel_accent_colour
        p_formula      = [
            local _wave
            _wave = (*f (+f (sin (-f 0.05 (*f $arg1 2000))) 1) 0.5)
            lerpf $_wave $arg1 (pow $arg1 8)
        ]
    ]

    if (!= (getmillis) $tool_control_focus_millis) [
        local _diff _dir
        _diff = (-f (uigetlastsy) 0.5)
        _dir  = (? (<f $_diff 0) -1 1)

        if (uidrawn) [
            // stop scrolling when we're not getting any closer
            if (<f (absf (-f $_diff $tool_control_autoscroll_last_dist)) 0.00001) [
                tool_control_autoscroll = 0
            ]
        ] [
            // workaround for when not drawn
            _dir = 1
        ]

        if (&& $tool_control_autoscroll [>f (absf $_diff) 0.05]) [
            tool_control_autoscroll_last_dist = $_diff
            tool_control_focus_millis         = (getmillis)
            tool_control_autoscroll_offset    = (+f $tool_control_autoscroll_offset (*f $_dir 0.015))
            tool_control_autoscroll_offset    = (maxf $tool_control_autoscroll_offset 0)

            tool_vscrollarea_autoscroll $tool_control_autoscroll_offset
        ] [
            tool_vscrollarea_autoscroll_offset_id = -1
            tool_control_autoscroll               = 0

            // Waiting till animation finishes before defocusing
            if (> (- (getmillis) $tool_control_focus_millis) $tool_widget_flash_time) [
                tool_control_focus = -1
            ]
        ]
    ]
]

tool_control_highlight = [
    if (= $p_id $tool_control_focus) [
        tool_control_do_highlight
    ]
]

ui_tool_undowarn = [
    result [
        uicolourtext "Undo for this operation is not supported" $ui_tool_warn_colour $ui_tool_text_size_s
    ]
]

tool_tip_content_var = []
tool_tip_simple_text = ""
tool_tip_action_name = ""

ui_tool_tip_content_action = [
    local _action_sdesc _action_desc _action_keys _action_type
    _action_sdesc = (at $$tool_tip_action_name $TA_PROP_SHORT_DESC)
    _action_desc  = (at $$tool_tip_action_name $TA_PROP_LONG_DESC)
    _action_keys  = (tool_action_pretty_bind_info $tool_tip_action_name)
    _action_type  = (at $$tool_tip_action_name $TA_PROP_TYPE)

    uitext $_action_sdesc $ui_tool_text_size_m
    if (!=s $_action_sdesc $_action_desc) [
        uicolourtext $_action_desc $ui_tool_mid_accent_colour $ui_tool_text_size_s
    ]

    if $_action_keys [
        uihlist $ui_tool_elem_space_s [
            if (= $_action_type $TA_TYPE_SCROLL) [
                uiimage "textures/keys/mouse5" $ui_tool_accent_colour 0 (*f $ui_tool_icon_size_s 0.8) $ui_tool_icon_size_s
                _action_keys = (concatword "+" $_action_keys)
            ]
            uicolourtext $_action_keys $ui_tool_dark_accent_colour $ui_tool_text_size_s
        ]
    ]

    if (= $_action_type $TA_TYPE_SCROLL) [
        uicolourtext "Mouse scroll action" $ui_tool_dark_accent_colour $ui_tool_text_size_s
    ]
]

ui_tool_tip_content_simple = [
    uitext $tool_tip_simple_text $ui_tool_text_size_s
]

ui_tip_tool = [
    if $tool_tip_content_var [
        $tool_tip_content_var
    ]
]

tool_tip_props = [
    [ p_tip        "" ]
    [ p_tip_simple "" ]
    [ p_tip_action "" ]
]

// 1:<props>
ui_tooltip_hover = [
    @(props $tool_tip_props arg1)

    tool_tip_content_var = []

    caseif (!=s $p_tip "") [
        tool_tip_content_var = $p_tip
    ] (!=s $p_tip_simple "") [
        tool_tip_simple_text = $p_tip_simple
        tool_tip_content_var = ui_tool_tip_content_simple
    ] (!=s $p_tip_action "") [
        tool_tip_action_name = $p_tip_action
        tool_tip_content_var = ui_tool_tip_content_action
    ]

    if $tool_tip_content_var [
        uitooltip tool
    ]
]

// 1:<props>
ui_tool_tip = [
    uihover [
        ui_tooltip_hover $arg1
    ]
]

T_BUTTON_ICON  = 1
T_BUTTON_LABEL = (<< 1 1)

// 1:<action> 2:<has label> 3:<has icon> 4:<align>
ui_tool_action_button = [
    local _code

    _code = (concatword "p_on_click = [tool_do_action " $arg1 "]^n")
    append _code (concatword "p_tip_action = " $arg1 "^n")

    if (= $numargs 1) [
        arg2 = 1
        arg3 = 1
    ]

    caseif (!= $arg2) [
        append _code (concatword "p_label = (at $" $arg1 " $TA_PROP_SHORT_DESC)^n")
        if $arg4 [
            append _code (concatword "p_label_align = " $arg4 "^n")
        ]
    ] (!= $arg3) [
        append _code "p_icon_align = 0^n"
    ]

    if (!= $arg3) [
        append _code (concatword "p_icon = (at $" $arg1 " $TA_PROP_ICON)^n")
    ]

    result $_code
]

ui_tool_preview_spin = [
    result [
        uipreviewyaw (mod (div (getmillis) 10) 360)
    ]
]

ui_tool_divider = [
    uipad $ui_tool_elem_space_m $ui_tool_elem_space_m $ui_tool_elem_space_m $ui_tool_elem_space_m [
        uiclamp 1 1
        uiline $ui_tool_dark_accent_colour 0 0 [ uiclamp 1 1 ]
    ]
]

tool_flash_props = [
    [ p_length       200                    ]
    [ p_flash_colour $ui_tool_accent_colour ]
    [ p_formula      [[result $arg1]]       ]
]

// 1:<final colour integer> 2:<begin time> 3:<props>
ui_tool_flash = [
    @(props $tool_flash_props arg3)

    local _colour _alpha _flash_time _flash_lerp
    _flash_time = (+ $arg2 $p_length)
    _flash_lerp = (-f 1 (clampf (divf (- $_flash_time (getmillis)) $p_length) 0 1))
    _alpha      = (tool_colour_get_alpha $arg1)
    _colour     = (tool_colour_rem_alpha $arg1)
    _colour     = (tool_colour_lerp_int $p_flash_colour $_colour (p_formula $_flash_lerp))

    tool_colour_add_alpha $_colour $_alpha
]

tool_fadeout_props = [
    [ p_length 1000 ]
]

// 1:<begin time> 2:<visible length> 3:<props>
ui_tool_fadeout = [
    @(props $tool_fadeout_props arg3)

    local _blend _fadeout_time
    _fadeout_time = (+f $arg1 (-f $arg2 $p_length))
    _blend        = (divf (-f (getmillis) $_fadeout_time) $p_length)

    uichangeblends (clampf (-f 1 $_blend) 0 1)
]

tool_vscrollarea_stack     = []
tool_vscrollarea_stack_num = 0

// 1:<offset>
tool_vscrollarea_autoscroll = [
    _autoscroll_target = (tool_vscrollarea_stack_getlast)
    _autoscroll_offset = $arg1
]

tool_vscrollarea_stack_getlast = [
    sublist $tool_vscrollarea_stack (- $tool_vscrollarea_stack_num 1)
]

tool_vscrollarea_props = [
    [ p_slider_size        $ui_toolpanel_slider_size      ]
    [ p_width              $ui_toolpanel_content_width    ]
    [ p_height             0.1                            ]
    [ p_scroll_speed       1                              ]
    [ p_scrollbar_autohide 1                              ]
    [ p_scrollbar_spacing  $ui_tool_elem_space_m_unscaled ]
    [ p_scrollbar_allocate 1                              ]
    [ p_id                 []                             ]
]

// 1:<content> 2:<props>
ui_tool_vscrollarea = [
    @(props $tool_vscrollarea_props arg2)

    @(tool_ui_scale p_slider_size)
    @(tool_ui_scale p_width)

    local _has_scrollbar _autoscroll_target _autoscroll_offset
    _has_scrollbar     = 0
    _autoscroll_target = -1
    _autoscroll_offset = 0

    if $p_id [
        append tool_vscrollarea_stack $p_id
        tool_vscrollarea_stack_num = (+ $tool_vscrollarea_stack_num 1)
    ]

    uihlist $p_scrollbar_spacing [
        uiscroll 0 $p_height [
            uialign -1 -1
            doargs @arg1

            if (|| (! $p_scrollbar_autohide) [>f (uigetclipvirth) $p_height]) [
                _has_scrollbar = 1
                if $p_scrollbar_allocate [] [
                    p_width = (-f $p_width $p_slider_size $p_scrollbar_spacing)
                ]
            ]

            uifill $p_width

            if (= $_autoscroll_target $p_id) [
                uiclipoffsety $_autoscroll_offset
            ]
        ]
        uicanscroll- (!= $_has_scrollbar 0)

        caseif $_has_scrollbar [
            uivscroll $p_slider_size $p_height $p_scroll_speed
        ] $p_scrollbar_allocate [
            uifill $p_slider_size
        ]
    ]

    if $p_id [
        tool_vscrollarea_stack = (listsplice $tool_vscrollarea_stack "" (- $tool_vscrollarea_stack_num 1) 1)
        tool_vscrollarea_stack_num = (- $tool_vscrollarea_stack_num 1)
    ]
]

tool_hscrollarea_props = [
    [ p_slider_size        $ui_toolpanel_slider_size      ]
    [ p_width              $ui_toolpanel_content_width    ]
    [ p_height             0.1                            ]
    [ p_scroll_speed       1                              ]
    [ p_scrollbar_autohide 1                              ]
    [ p_scrollbar_spacing  $ui_tool_elem_space_m_unscaled ]
    [ p_scrollbar_allocate 1                              ]
]

// 1:<content> 2:<props>
ui_tool_hscrollarea = [
    @(props $tool_hscrollarea_props arg2)

    @(tool_ui_scale p_slider_size)
    @(tool_ui_scale p_width)

    local _has_scrollbar
    _has_scrollbar     = 0

    uivlist $p_scrollbar_spacing [
        uiscroll $p_width 0 [
            uialign -1 -1
            doargs @arg1

            if (|| (! $p_scrollbar_autohide) [>f (uigetclipvirtw) $p_width]) [
                _has_scrollbar = 1
                if $p_scrollbar_allocate [] [
                    p_height = (-f $p_height $p_slider_size $p_scrollbar_spacing)
                ]
            ]

            uifill 0 $p_height
        ]
        uicanscroll- (!= $_has_scrollbar 0)

        caseif $_has_scrollbar [
            uihscroll $p_width $p_slider_size $p_scroll_speed
        ] $p_scrollbar_allocate [
            uifill 0 $p_slider_size
        ]
    ]
]

ui_tool_interactable_colour = $ui_tool_base_colour

// wrapper for `ui_tool_flash`
// 1:<begin millis> 2:<props>
ui_tool_interactable_flash = [
    ui_tool_interactable_colour = (ui_tool_flash $ui_tool_interactable_colour $arg1 $arg2)
]

// 1:<w> 2:<h> 3:<children> 4:<disabled>
ui_tool_interactable = [
    result [
        uiborderedimageclamped $skintex $ui_tool_base_colour 0 $ui_texborder $ui_screenborder @arg1 @arg2 [
            local _highlighting _colour

            @@arg3

            _highlighting = (uigethighlight)
            _colour       = $ui_tool_interactable_colour

            uihold [
                uicolourset $ui_tool_select_colour
            ] [
                uihover [ _highlighting = 1 ]

                if $_highlighting [
                    uicolourset $ui_tool_highlight_colour
                ] [
                    uicolourset $_colour
                ]
            ]
        ]

        ui_tool_interactable_colour = $ui_tool_base_colour
    ]
]

// 1:<var>
ui_tool_textinput_prompt = [
    if (&& [=s $$arg1 ""] [! (uifocus?)]) [
        uicolourtext $p_prompt $ui_tool_dark_accent_colour $ui_tool_text_size_xs
    ]
]

tool_textinput_props = [
    [ p_label      "Text"                        ]
    [ p_label_size $ui_tool_text_size_s_unscaled ]
    [ p_prompt     ["[Enter text here]"]         ]
    [ p_immediate  1                             ]
    [ p_lines      0                             ]
    [ p_limit      0                             ]
    [ p_on_change  []                            ]
    [ p_focus      0                             ]
    [ p_id         []                            ]
]

// 1:<var> 2:<length> 3:<props>
ui_tool_textinput = [
    @(props $tool_textinput_props arg3)

    @(tool_ui_scale p_label_size)

    uihlist $ui_toolpanel_elem_space [
        uiclamp 1 1
        uitext $p_label $p_label_size [ uialign -1 ]

        @@(ui_tool_interactable 0 0 [
            tool_control_highlight

            uispace $ui_padsmall $ui_padsmaller [
                if $p_lines [
                    uimlfield $arg1 (* -1 $arg2) $p_lines $p_limit [
                        p_on_change $$arg1
                    ] $ui_tool_text_size_s $p_immediate [
                        ui_tool_textinput_prompt $arg1
                        if $p_focus uieditorsetfocus

                        if (uieditorisfocus) [
                            uitext (concatword "^fA" (uieditorgetcount) "/" $p_limit) $ui_tool_text_size_xs
                            uialign- 1 1
                        ]
                    ]
                ] [
                    uifield $arg1 $arg2 [
                        p_on_change $$arg1
                    ] $ui_tool_text_size_s $p_immediate [
                        ui_tool_textinput_prompt $arg1
                        if $p_focus uieditorsetfocus
                    ]
                ]
            ]
        ])
    ]
]

// 1:<label> 2:<var> 3:<step> 4:<props>
ui_tool_var_input = [
    local _var_type
    _var_type = (getvartype $arg2)

    case $_var_type $ididxvar [
        ui_tool_numinput $arg2 0 0 $arg3 [
            p_val_format = i
            p_label      = [@arg1]
            p_immediate  = 0
            @arg4
        ]
    ] $ididxfvar [
        ui_tool_numinput $arg2 0 0 $arg3 [
            p_label     = [@arg1]
            p_immediate = 0
            @arg4
        ]
    ]
]

// 1:<image> 2:<description> 3:<active?>
ui_tool_tab = [
    local _col _img_color _res
    _res       = 0
    _col       = (? $arg3 $ui_tool_accent_colour $ui_tool_base_colour)
    _img_color = (? $arg3 0 $ui_tool_accent_colour)

    uiborderedimageclamped $skintex $_col 0 $ui_texborder $ui_screenborder 0 0 [
        uispace $ui_tool_elem_space_s $ui_tool_elem_space_s [
            uiimage $arg1 $_img_color 0 $p_icon_size $p_icon_size
        ]

        uihover [
            if (! $arg3) [
                uicolourset $ui_tool_highlight_colour
            ]
        ]

        uipress [
            uicolourset $ui_tool_dark_accent_colour
            _res = 1
        ]

        ui_tool_tip [
            p_tip_simple = [@@arg2]
        ]
    ]

    result $_res
]

tool_vtabs_props = [
    [ p_icon_size        0.02                          ]
    [ p_label_size       $ui_tool_text_size_s_unscaled ]
    [ p_calc_dyn_content 0                             ]
]

// 1:<id> 2:<icons> 3:<descriptions> 4:<contents> 5:<props>
ui_tool_vtabs = [
    @(props $tool_vtabs_props arg5)

    @(tool_ui_scale p_icon_size)
    @(tool_ui_scale p_label_size)

    local _num_tabs _active_idx _is_active _tab_res _static_h
    _active_idx = (getalias $arg1)
    _num_tabs   = (listlen $arg2)
    _static_h   = 0

    uihlist $ui_tool_elem_space_l [
        uiclamp 1 1

        uivlist $ui_tool_elem_space_l [
            uihlist $ui_tool_elem_space_l [
                uiimage (at $arg2 $_active_idx) 0xffffff 0 $p_icon_size $p_icon_size
                uitext (at $arg3 $_active_idx) $p_label_size
            ]
            uialign- -1
            _static_h = (+f $_static_h (uigetlasth-) (*f $ui_tool_elem_space_l 2))
            if $p_calc_dyn_content [ toolpanel_calc_dyn_content $_static_h ]

            uiline $ui_tool_dark_accent_colour 0 0 [ uiclamp 1 1 ]
            do $(at $arg4 $_active_idx)
        ]
        uialign- -2 -1

        uicolour $ui_tool_dark_colour 0 0 [
            uiclamp 0 0 1 1
            uivlist 0 [
                loop tabidx $_num_tabs [
                    _is_active = (= (getalias $arg1) $tabidx)
                    _tab_res   = (ui_tool_tab (at $arg2 $tabidx) (at $arg3 $tabidx) $_is_active)
                    if (= $_tab_res 1) [
                        $arg1 = $tabidx
                    ]
                ]
            ]
            uialign- -1 -1
        ]
    ]
]

// 1:<text> 2:<children>
ui_tool_group = [
    uihlist 0 [
        uiclamp 1 1
        uitext $arg1 $ui_tool_text_size_s
        uivlist 0 [
            @arg2
        ]
    ]
]

tool_autoscroll_props = [
    [ p_width     0.1                            ]
    [ p_text_size $ui_tool_text_size_xs_unscaled ]
]

// 1:<text> 2:<props>
ui_tool_autoscroll_text = [
    @(props $tool_autoscroll_props arg2)

    @(tool_ui_scale p_text_size)

    uiclip $p_width 0 0 0 [
        uitext $arg1 $p_text_size
        uiclipoffsetx (*f $toolview_autoscroll (-f (uigetclipvirtw) $p_width))
    ]
]

tool_param_copy_val = 0
tool_param_copied   = 0

// 1:<var> 2:<value> 3:<on change>
tool_param_set = [
    if (!=s $$arg1 $arg2) [
        set $arg1 $arg2
        doargs $arg3
    ]
]

// 1:<var> 2:<delta> 3:<on change>
tool_param_delta = [
    if (>= (listfind val $arg2 [!= $val 0]) 0) [
        set $arg1 $arg2
        doargs $arg3
    ]
]

tool_param_copy_props = [
    [ p_get [[result $arg1]] ]
]

// 1:<var> 2:<props>
tool_param_copy = [
    @(props $tool_param_copy_props arg2)

    tool_param_copy_val = (p_get $$arg1)
    tool_param_copied = 1

    tool_info_show "Value copied" [
        p_subtext = [@@tool_param_copy_val]
    ]
]

tool_param_paste_props = [
    [ p_set       [[result $arg1]] ]
    [ p_on_change []               ]
]

// 1:<var> 2:<props>
tool_param_paste = [
    @(props $tool_param_paste_props arg2)

    if $tool_param_copied [
        tool_param_set $arg1 (p_set $tool_param_copy_val) $p_on_change

        tool_info_show "Value pasted" [
            p_subtext = [@@tool_param_copy_val]
        ]
    ]
]

tool_param_reset_props = [
    [ p_set       [[result $arg1]] ]
    [ p_on_change []               ]
    [ p_reset_val []               ]
]

// 1:<var> 2:<props>
tool_param_reset = [
    @(props $tool_param_reset_props arg2)

    tool_param_set $arg1 (p_set $p_reset_val) $p_on_change
]

tool_param_menu_props = [
    [ p_can_reset  0                ]
    [ p_reset_val  []               ]
    [ p_on_change  []               ]
    [ p_get        [[result $arg1]] ]
    [ p_set        [[result $arg1]] ]
    [ p_item_names []               ]
    [ p_on_select  []               ]
    [ p_disabled   []               ]
]

// 1:<var> 2:<props>
# tool_param_menu [
    @(props $tool_param_menu_props arg2)

    local _paste_text _item_names _on_select _disabled _dividers
    _paste_text = "Paste value"

    if $tool_param_copied [
        _paste_text = (format "Paste value (%1)" $tool_param_copy_val)
    ]

    _item_names = [
        "Copy value"
        [@@_paste_text]
        "Reset value"
        @p_item_names
    ]

    _on_select = [
        do (at [
            [
                tool_param_copy #1 arg1 [
                    p_get = [#1 p_get]
                ]
            ] [
                tool_param_paste #1 arg1 [
                    p_set       = [#1 p_set]
                    p_on_change = [#1 p_on_change]
                ]
            ] [
                tool_param_reset #1 arg1 [
                    p_set       = [#1 p_set]
                    p_reset_val = [#1 p_reset_val]
                    p_on_change = [#1 p_on_change]
                ]
            ]
        ] $arg1)

        arg1 = (- $arg1 3)
        if (>= $arg1 0) [
            #1 p_on_select
        ]
    ]

    _disabled = [
        case $arg1 0 [
            result 0
        ] 1 [
            ! $tool_param_copied
        ] 2 [
            ! #1 p_can_reset
        ] () [
            arg1 = (- $arg1 3)
            #1 p_disabled
        ]
    ]

    _dividers = (? (!=s $p_item_names) [2] [])

    toolpanel_open_menu [
        p_width         = 0.2
        p_item_names    = [#1 _item_names]
        p_on_select     = [#1 _on_select]
        p_disabled      = [#1 _disabled]
        p_item_dividers = [#1 _dividers]
    ]
]

tool_confirm_prompt_props = [
    [ p_width       0.3 ]
    [ p_noundo_warn 0   ]
]

// 1:<text> 2:<code> 3:<props>
# tool_confirm_prompt [
    @(props $tool_confirm_prompt_props arg3)

    local _menu_items _divider _confirm_idx
    _menu_items  = [
        [#1 arg1]
    ]
    _divider     = 0
    _confirm_idx = 1

    if $p_noundo_warn [
        append _menu_items ["^foThis operation cannot be undone!"]
        _divider     = (+ $_divider 1)
        _confirm_idx = (+ $_confirm_idx 1)
    ]

    append _menu_items "Confirm"

    toolpanel_open_menu [
        p_width         = @p_width
        p_nav_enable    = 0
        p_item_names    = [#1 _menu_items]
        p_item_dividers = [#1 _divider]
        p_disabled      = [!= $arg1 #1 _confirm_idx]
        p_on_select     = [#1 arg2]
    ]
]

exec "config/ui/tool/toolview/widgets/toolnuminput.cfg"
exec "config/ui/tool/toolview/widgets/tooldropdown.cfg"
exec "config/ui/tool/toolview/widgets/tooltexlist.cfg"
exec "config/ui/tool/toolview/widgets/toolmodellist.cfg"
exec "config/ui/tool/toolview/widgets/toolsearchlist.cfg"
exec "config/ui/tool/toolview/widgets/toolskyboxlist.cfg"
exec "config/ui/tool/toolview/widgets/toolimagelist.cfg"
exec "config/ui/tool/toolview/widgets/toolfilelist.cfg"
exec "config/ui/tool/toolview/widgets/tooltexselect.cfg"
exec "config/ui/tool/toolview/widgets/toolmodelselect.cfg"
exec "config/ui/tool/toolview/widgets/toolsearchselect.cfg"
exec "config/ui/tool/toolview/widgets/toolskyboxselect.cfg"
exec "config/ui/tool/toolview/widgets/toolimageselect.cfg"
exec "config/ui/tool/toolview/widgets/toolfileselect.cfg"
exec "config/ui/tool/toolview/widgets/tooltexinfo.cfg"
exec "config/ui/tool/toolview/widgets/toolcolour.cfg"
exec "config/ui/tool/toolview/widgets/toolcollapsegroup.cfg"
exec "config/ui/tool/toolview/widgets/toolswitch.cfg"
exec "config/ui/tool/toolview/widgets/toolbutton.cfg"
exec "config/ui/tool/toolview/widgets/toolkeyinput.cfg"
exec "config/ui/tool/toolview/widgets/toolmenu.cfg"
exec "config/ui/tool/toolview/widgets/toolvec.cfg"
