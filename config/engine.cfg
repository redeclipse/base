defaultmodifier = 0
modifier = $defaultmodifier
domodifier = [
    if (tool_modifier_handler $arg1) [
        modifier = $defaultmodifier
    ] [
        modifier = $arg1;
        onrelease [ modifier = $defaultmodifier ]
    ]
]

modscale = 1

deltastates = ["game" "dead" "edit" "spec" "wait"]
universaldelta = [
    scale = (* $arg1 $modscale)
    delta = (format "delta_%1_%2" (at $deltastates (getplayerstate)) $modifier)
    if (=s (getalias $delta) "") [
        delta = (format "delta_%1_%2" (at $deltastates (getplayerstate)) $defaultmodifier)
        if (=s (getalias $delta) "") [
            delta = (format "delta_%1_%2" (at $deltastates 0) $modifier)
            if (=s (getalias $delta) "") [
                delta = (format "delta_%1_%2" (at $deltastates 0) $defaultmodifier)
            ]
        ]
    ]
    if (getalias $delta) [ do [@delta @scale] ]
]; setcomplete universaldelta 1

listcomplete editmat "air water clip glass volfog noclip lava death aiclip ladder alpha hurt nogi"
air = [ editmat air $arg1 ]; setcomplete air 1
loop i 4 [
    [water@(? $i (+ $i 1))] = [ editmat water@(? $i (+ $i 1)) $arg1 ]; setcomplete [water@(? $i (+ $i 1))] 1
    [lava@(? $i (+ $i 1))] = [ editmat lava@(? $i (+ $i 1)) $arg1 ]; setcomplete [lava@(? $i (+ $i 1))] 1
    [glass@(? $i (+ $i 1))] = [ editmat glass@(? $i (+ $i 1)) $arg1 ]; setcomplete [glass@(? $i (+ $i 1))] 1
    [volfog@(? $i (+ $i 1))] = [ editmat volfog@(? $i (+ $i 1)) $arg1 ]; setcomplete [volfog@(? $i (+ $i 1))] 1
]
clip = [ editmat clip $arg1 ]; setcomplete clip 1
noclip = [ editmat noclip $arg1 ]; setcomplete noclip 1
death = [ editmat death $arg1 ]; setcomplete death 1
aiclip = [ editmat aiclip $arg1 ]; setcomplete aiclip 1
ladder = [ editmat ladder $arg1 ]; setcomplete ladder 1
alpha = [ editmat alpha $arg1 ]; setcomplete alpha 1
hurt = [ editmat hurt $arg1 ]; setcomplete hurt 1
nogi = [ editmat nogi $arg1 ]; setcomplete nogi 1

//////// Entity Editing ///////////////

=enttype = [
    || [=s * $arg1] [=s (enttype) $arg1]
]

=entattr = [
    || [=s * $arg2] [= (entattr $arg1) $arg2]
]

// clear ents of given type
clearents = [
    if $editing [
        entcancel
        entselect [ =enttype $arg1 ];
        echo Deleted (enthavesel) $arg1 entities;
        delent
    ]
]; setcomplete clearents 1

// replace all ents that match current selection
// with the values given
replaceents = [
    if $editing [
        do [
            entfind @(entget)
            entset @(loopconcat i $numargs [result $[arg@(+ $i 1)]])
        ]
        echo Replaced (enthavesel) entities
    ]
]; setcomplete replaceents 1

selentedit      = [ saycommand ( concatword "/entset " (entget) ) ]; setcomplete selentedit 1
selreplaceents  = [ saycommand ( concatword "/replaceents " (entget) ) ]; setcomplete selreplaceents 1
selentfindall   = [ do [ entfind @(entget) ] ]; setcomplete selentfindall 1

// modify given attribute of ent by a given amount
// arg1 attribute
// arg2 value
entmodify = [
    entattr $arg1 (+ (entattr $arg1) $arg2)
]; setcomplete entmodify 1

entsmodify = [
    entloop [
        entmodify $arg1 $arg2
    ]
]; setcomplete entsmodify 1

entproperty = [
    entprop $arg1 $arg2
]; setcomplete entproperty 1

// 1:<move vec>
entmove = [
    local _pos
    _pos = []

    entloop [
        _pos = (entpos)
        entpos (+f (at $_pos 0) (at $arg1 0)) (+f (at $_pos 1) (at $arg1 1)) (+f (at $_pos 2) (at $arg1 2))
    ]
]

//////// Copy and Paste //////////////

// 3 types of copying and pasting
// 1. select only cubes      -> paste only cubes
// 2. select cubes and ents  -> paste cubes and ents. same relative positions
// 3. select only ents       -> paste last selected ent. if ents are selected, replace attrs as paste

opaquepaste = 1
entcopybuf = ""

entrepl   = [
    do [
        if (enthavesel) [] [ newent @entcopybuf ]
        entset @entcopybuf
    ]
]; setcomplete entrepl 1

editcopy   = [
    if (|| [havesel] [! (enthavesel)]) [
        entcopybuf = ""
        entcopy
        copy
    ] [
        entcopybuf = (entget)
    ]
]; setcomplete editcopy 1

editpaste  = [
    cancelpaste = (! (|| [enthavesel] [havesel]));
    if (=s "" $entcopybuf) [
        pastehilight
        onrelease [
            if $opaquepaste delcube
            paste
            entpaste
            if $cancelpaste [ cancelsel ]
        ]
    ] [
        entrepl
        if $cancelpaste [ cancelsel ]
    ]
]; setcomplete editpaste 1

/////// Selection ///////////////

// select ents with given properties
// '*' is wildcard
entfind = [
    if (= $numargs 0) [
        entselect 1
    ] [
        entselect (concat [ && [=enttype @@arg1] ] (loopconcat i (- $numargs 1) [
            result [ [=entattr @@i @@[arg@(+ $i 2)]] ]
        ]))
    ]
]; setcomplete entfind 1

entfindinsel = [
    if (= $numargs 0) [
        entselect [ insel ]
    ] [
        entselect (concat [ && [insel] [=enttype @@arg1] ] (loopconcat i (- $numargs 1) [
            result [ [=entattr @@i @@[arg@(+ $i 2)]] ]
        ]))
    ]
]; setcomplete entfindinsel 1

//LiSt Entities
// Arguments: None
// Output: Echos to console entities in selection && total number of selected entities

lse = [
    line = ""
    count = 0
    entloop [
        line  = ( concatword $line (entget) "       " )
        count = ( + $count 1 )
        if (> $count 4) [
            echo $line
            line = ""
            count = 0
        ]
    ]
    if (> $count 0 ) [ echo $line ]
    echo (enthavesel) entities selected
]; setcomplete lse 1

grabbing = 0

drag = [
    dragging 1
    onrelease [
        dragging 0
        tool_sel_millis = (getmillis 1)
    ]
]

corners = [
    selectcorners 1
    dragging 1
    onrelease [
        selectcorners 0
        dragging 0
        tool_sel_millis = (getmillis 1)
    ]
]

entsel = [
    if $curshiftmod [
        enttoggle 0
    ] [
        enttoggle 0
    ]
]

editdrag = [
    if (! $entmoving) [
        cancelsel
    ]

    || [
        entsel
    ] [
        if (tool_enttemp_can_place) [
            tool_enttemp_place
        ] [
            drag
        ]
    ]
]
setcomplete editdrag 1

selcorners = [
    if $hmapedit [
        hmapselect
    ] [
        if $numenthover [] [
            cancelsel
            corners
        ]
    ]
]
setcomplete selcorners 1

editextend = [ || [ enttoggle 0 ] [ selextend; reorient ] ]; setcomplete editextend 1

editmovewith    = [
    if (havesel) [
        @arg1
        onrelease [ moving 0; dragging 0 ]
    ] [
        @arg1
    ]
]

editmovecorner = [ editmovewith selcorners ]; setcomplete editmovecorner 1
editmovedrag   = [ editmovewith editdrag ]; setcomplete editmovedrag 1

////// Other Editing commands /////////

editfacewentpush = [
    if (|| [havesel] [! (enthavesel)] ) [
        if $moving [
            pushsel $arg1
        ] [
            entcancel
            tool_edit_face $arg1 $arg2
        ]
    ] [
        if $entmoving [ entpush $arg1 ]
    ]
]; setcomplete editfacewentpush 1

entswithdirection = ["playerstart 0" "mapmodel 1" "teledest 0" "camera 0"]

editdel = [ if (!= (enthavesel) 0) [ delent ] [ delcube ] ]; setcomplete editdel 1
editflip = [ if (!= (enthavesel) 0) [ entflip ]; flip ]; setcomplete editflip 1

editrotate = [ if (!= (enthavesel) 0) [ entrotate $arg1 ]; rotate $arg1 ]; setcomplete editrotate 1

editcut = [
  if (moving 1) [
    if (= $moving 1) [selsave]
    onrelease [
      moving 0
      if (selmoved) [
        selswap
        copy; entcopy
        delcube; delent
        selrestore
        paste; entpaste
      ]
    ]
  ]
]; setcomplete editcut 1

selectents = [ entselect [&& [insel] [=enttype @@arg1]] ]; setcomplete selectents 1

noautosave = 0
autosaveinterval = 10; setpersist autosaveinterval 1; setcomplete autosaveinterval 1
autosave = [
    if (= $noautosave 0) [
        savemap
        sleep (* $autosaveinterval 60000) [ autosave ]
    ] [ noautosave = 0 ]
]; setcomplete autosave 1
stopautosave = [ noautosave = 1 ]; setcomplete stopautosave 1

togglesound = [ if (>f $soundmastervol 0) [ soundmastervol 0; echo "sound off" ] [ soundmastervol 1; echo "sound on" ] ]; setcomplete togglesound 1

changeoutline = [
    outlinestatus = (mod (+ $arg1 $outlinestatus) (listlen $outlinecolours))
    if (< $outlinestatus 0) [
        outlinestatus = (+ (listlen $outlinecolours) $outlinestatus ) //just making sure it'll fit
    ]

    if (=s (at $outlinecolours $outlinestatus) "OFF") [
        echo "Outline OFF"
        outline 0
    ] [
        echo (concat "Outline" (at $outlinecolours $outlinestatus))
        outline 1
        outlinecolour @(at $outlinecolours $outlinestatus)
    ]
]; setcomplete changeoutline 1
outlinecolours = ["255 255 255" "0 0 0" "80 80 255" "0 127 255" "255 80 80" "255 0 255" "80 255 80" "255 255 80" "OFF"]
outlinestatus = 0

enttypelist = ""
do [
    en = (getentinfo)
    loop q $en [
        es = (getentinfo $q)
        enttypelist = (? $q (concat $enttypelist $es) $es)
    ]
]
entcomplete = [ listcomplete $arg1 $enttypelist ]

// entcomplete gets defined by game
entcomplete newent
entcomplete entfind

enttypeselect = [
    enttypelength = (listlen $enttypelist)
    next = (mod (+ (indexof $enttypelist (enttype)) $arg1) $enttypelength)
    if (< $next 0) [ next = (+ $next $enttypelength) ]
    do [entset @(listsplice (entget) (at $enttypelist $next) 0 1)]
]

slime = [
    editmat water
    editmat death
    obitwater "sucked on slime"
    watercolour 0x182200
    waterfallcolour 0x002200
    waterfog 0
    waterspec 10
]

getsundir = [sunlightyaw (getcamerayaw); sunlightpitch (getcamerapitch)]
getmoondir = [moonlightyaw (getcamerayaw); moonlightpitch (getcamerapitch)]

concatif = [result (? (!=s $arg1 "") (concat $arg1 $arg2) $arg2)]

isediting = [
    result (= (getplayerstate) $stateidxediting)
]

ESTAT_WTR         = 0
ESTAT_WTR_PERCENT = 1
ESTAT_WVT         = 2
ESTAT_WVT_PERCENT = 3
ESTAT_EVT         = 4
ESTAT_EVA         = 5
ESTAT_OND         = 6
ESTAT_VA          = 7
ESTAT_GL          = 8
ESTAT_GB          = 9
ESTAT_OQ          = 10
ESTAT_FPS         = 11
ESTAT_BEST        = 12
ESTAT_WORST       = 13
ESTAT_ENTS        = 14
ESTAT_ENTSEL      = 15
ESTAT_WP          = 16
ESTAT_PVS         = 17
ESTAT_VEL         = 18
ESTAT_MPS         = 19
ESTAT_KMH         = 20
ESTAT_POSX        = 21
ESTAT_POSY        = 22
ESTAT_POSZ        = 23
ESTAT_YAW         = 24
ESTAT_PITCH       = 25
ESTAT_ROLL        = 26
ESTAT_SELOX       = 27
ESTAT_SELOY       = 28
ESTAT_SELOZ       = 29
ESTAT_SELSX       = 30
ESTAT_SELSY       = 31
ESTAT_SELSZ       = 32
ESTAT_SELCX       = 33
ESTAT_SELCXS      = 34
ESTAT_SELCY       = 35
ESTAT_SELCYS      = 36
ESTAT_CUBE        = 37
ESTAT_MAT         = 38
ESTAT_CORNER      = 39
ESTAT_ORIENT      = 40
ESTAT_GRID        = 41
