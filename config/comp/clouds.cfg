shader $SHADER_DEFAULT compositecloudlayer [
    attribute vec4 vvertex, vcolor;
    attribute vec2 vtexcoord0;
    uniform mat4 hudmatrix;
    varying vec2 texcoord0;
    varying vec4 colorscale;

    void main(void)
    {
        gl_Position = hudmatrix * vvertex;
        texcoord0 = vtexcoord0;
        colorscale = vcolor;
    }
] [
    uniform vec4 params; // scale nsoffset nsscale iters
    uniform vec4 shade;  // colscale coloffset blendns blendnc
    varying vec2 texcoord0;
    varying vec4 colorscale;

    fragdata(0) vec4 fragcolor;

    float hash(vec2 p, float scale)
    {
        vec2 coord = mod(p, scale);
        return fract(sin(dot(coord, vec2(27.16898, 38.90563))) * 5151.5473453);
    }

    float noise(vec2 p, float scale)
    {
        vec2 coord = p * scale;
        vec2 f = fract(coord);
        coord = floor(coord);
        f = f * f * (3.0 - 2.0 * f);
        return mix(mix(hash(coord, scale), hash(coord + vec2(1.0, 0.0), scale), f.x), mix(hash(coord + vec2(0.0, 1.0), scale), hash(coord + vec2(1.0, 1.0), scale), f.x), f.y);
    }

    float fbm(vec2 p, float s, float t, float a, float x, bool absolute)
    {
        float f = 0.0, scale = s;
        vec2 coord = mod(p, scale);
        float amplitude = a;
        for(int i = 0; i < params.w; i++)
        {
            f += absolute ? abs(noise(p, scale) * amplitude) : noise(p, scale) * amplitude;
            amplitude *= x;
            scale *= t;
        }
        return min(f, 1.0);
    }

    void main(void)
    {
        float cloudrs = fbm(texcoord0, params.x, 2.0, 0.8, 0.7, true);
        float cloudns = fbm(texcoord0, params.x * 2.0, 4.0, 0.7, 0.6, false);
        cloudns *= cloudrs + cloudns;
        float cloudnc = fbm(texcoord0, params.x * 3.0, 8.0, 0.4, 0.6, false);
        float cloudrc = fbm(texcoord0, params.x * 4.0, 10.0, 0.4, 0.6, true);
        cloudnc += cloudrc;
        cloudns = params.y + params.z * cloudns * cloudrs;

        float cloudcol = clamp((shade.y + shade.x * cloudnc), 0.0, 1.0);
        float cloudmix = clamp(cloudns * shade.z + cloudnc * shade.w, 0.0, 1.0);
        fragcolor = vec4(cloudcol, cloudcol, cloudcol, cloudmix) * colorscale;
    }
]

newui cloudlayer $SURFACE_COMPOSITE [
    @(localargs params [4.0 0.25 2.0 8.0])
    @(localargs shade [0.5 0.2 0.25 0.25])
    execid uiarg1
    uirender compositecloudlayer 1 1 [
        uirenderparam params $params1 $params2 $params3 $params4
        uirenderparam shade $shade1 $shade2 $shade3 $shade4
    ]
]
