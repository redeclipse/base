shader $SHADER_DEFAULT compositenoise [
    attribute vec4 vvertex, vcolor;
    attribute vec2 vtexcoord0;
    uniform mat4 hudmatrix;
    varying vec2 texcoord0;
    varying vec4 colorscale;

    void main(void)
    {
        gl_Position = hudmatrix * vvertex;
        texcoord0 = vtexcoord0;
        colorscale = vcolor;
    }
] [
    uniform vec4 params;
    uniform vec4 curmillis;
    varying vec2 texcoord0;
    varying vec4 colorscale;

    fragdata(0) vec4 fragcolor;

    float hash12(vec2 p)
    {
        vec3 p3  = fract(vec3(p.xyx) * 0.1031);
        p3 += dot(p3, p3.yzx + 33.33);
        return fract((p3.x + p3.y) * p3.z);
    }

    void main()
    {
        float a = 0.0;
        for(int t = 0; t < int(params.x); t++)
        {
            float v = float(t + 1) * params.y;
            vec2 pos = ((texcoord0 * 2.0 - 1.0) * v + curmillis.x * params.z + params.w);
            a += hash12(pos.xy);
        }
        a /= params.x;
        fragcolor = vec4(a, a, a, 1.0) * colorscale;
    }
]

newui noise $SURFACE_COMPOSITE [
    @(localargs params [2.0 0.152 1500.0 50.0])
    execid uiarg1
    uirender compositenoise 1 1 [
        uirenderparam params $params1 $params2 $params3 $params4
    ]
]