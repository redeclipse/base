deffvarp shiftfloatspeed 1 500 $fvaridxmax
deffvarp shiftmodscale 1 10 $fvaridxmax

curshiftmod = 0
oldfloatspeed = $floatspeed

shiftmod = [
    if $arg1 [
        oldfloatspeed = $floatspeed
        floatspeed $shiftfloatspeed
        modscale = $shiftmodscale
        curshiftmod = 1
    ] [
        floatspeed $oldfloatspeed
        modscale = 1
        curshiftmod = 0
    ]
]

complete exec .
complete copyprefab prefab obr

exec "config/tool.cfg"

mapcomplete     = [ setcomplete $arg1 1; complete $arg1 maps mpz ]; mapcomplete map
start           = [ mode (| 0 $arg2) (| 0 $arg3); map $arg1 ]; mapcomplete start

demo            = [ stopdemo; start $arg1 0 0 ]; complete demo demos dmo
edit            = [ start $arg1 $G_EDITING $arg2 ]; mapcomplete edit
deathmatch      = [ start $arg1 $G_DEATHMATCH $arg2 ]; mapcomplete deathmatch
dm              = [ deathmatch $arg1 $arg2 ]; mapcomplete dm
teamdm          = [ start $arg1 $G_DEATHMATCH $arg2 ]; mapcomplete teamdm
tdm             = [ teamdm $arg1 $arg2 ]; mapcomplete tdm
gladiator       = [ start $arg1 $G_DEATHMATCH (| (<< 1 $G_M_GSP1) $arg2) ]; mapcomplete gladiator
ffa             = [ start $arg1 $G_DEATHMATCH (| (<< 1 $G_M_FFA) $arg2) ]; mapcomplete ffa
fdm             = [ ffa $arg1 $arg2 ]; mapcomplete fdm
coop            = [ start $arg1 $G_DEATHMATCH (| (<< 1 $G_M_COOP) $arg2) ]; mapcomplete coop
cdm             = [ coop $arg1 $arg2 ]; mapcomplete cdm
capture         = [ start $arg1 $G_CAPTURE $arg2 ]; mapcomplete capture
ctf             = [ capture $arg1 $arg2 ]; mapcomplete ctf
defend          = [ start $arg1 $G_DEFEND $arg2 ]; mapcomplete defend
dnc             = [ defend $arg1 $arg2 ]; mapcomplete dnc
dac             = [ defend $arg1 $arg2 ]; mapcomplete dac
bomber          = [ start $arg1 $G_BOMBER $arg2 ]; mapcomplete bomber
bb              = [ bomber $arg1 $arg2 ]; mapcomplete bb
speedrun            = [ start $arg1 $G_SPEEDRUN $arg2 ]; mapcomplete speedrun
instagib        = [ start $arg1 $G_DEATHMATCH (| (<< 1 $G_M_INSTAGIB) $arg2) ]; mapcomplete instagib
insta           = [ instagib $arg1 $arg2 ]; mapcomplete insta
medieval        = [ start $arg1 $G_DEATHMATCH (| (<< 1 $G_M_MEDIEVAL) $arg2) ]; mapcomplete medieval
kaboom          = [ start $arg1 $G_DEATHMATCH (| (<< 1 $G_M_KABOOM) $arg2) ]; mapcomplete kaboom
duel            = [ start $arg1 $G_DEATHMATCH (| (<< 1 $G_M_DUEL) $arg2) ]; mapcomplete duel
survivor        = [ start $arg1 $G_DEATHMATCH (| (<< 1 $G_M_SURVIVOR) $arg2) ]; mapcomplete survivor
lms             = [ survivor $arg1 $arg2 ]; mapcomplete lms
classic         = [ start $arg1 $G_DEATHMATCH (| (<< 1 $G_M_CLASSIC) $arg2) ]; mapcomplete classic
quickcapture    = [ start $arg1 $G_CAPTURE (| (<< 1 $G_M_GSP1) $arg2) ]; mapcomplete quickcapture
defendcapture   = [ start $arg1 $G_CAPTURE (| (<< 1 $G_M_GSP2) $arg2) ]; mapcomplete defendcapture
protectcapture  = [ start $arg1 $G_CAPTURE (| (<< 1 $G_M_GSP3) $arg2) ]; mapcomplete protectcapture
quickdefend     = [ start $arg1 $G_DEFEND (| (<< 1 $G_M_GSP1) $arg2) ]; mapcomplete quickdefend
kingdefend      = [ start $arg1 $G_DEFEND (| (<< 1 $G_M_GSP2) $arg2) ]; mapcomplete kingdefend
koth            = [ kingdefend $arg1 $arg2 ]; mapcomplete koth
holdbomber      = [ start $arg1 $G_BOMBER (| (<< 1 $G_M_GSP1) $arg2) ]; mapcomplete holdbomber
basketbomber    = [ start $arg1 $G_BOMBER (| (<< 1 $G_M_GSP2) $arg2) ]; mapcomplete basketbomber
attackbomber    = [ start $arg1 $G_BOMBER (| (<< 1 $G_M_GSP3) $arg2) ]; mapcomplete attackbomber
trial           = [ start $arg1 $G_SPEEDRUN (| (<< 1 $G_M_GSP1) $arg2) ]; mapcomplete trial
speedrunlapped       = [ start $arg1 $G_SPEEDRUN (| (<< 1 $G_M_GSP1) $arg2) ]; mapcomplete speedrunlapped
endurancespeedrun   = [ start $arg1 $G_SPEEDRUN (| (<< 1 $G_M_GSP2) $arg2) ]; mapcomplete endurancespeedrun
gauntletspeedrun    = [ start $arg1 $G_SPEEDRUN (| (<< 1 $G_M_GSP3) $arg2) ]; mapcomplete gauntletspeedrun
arena           = [ start $arg1 $G_DEATHMATCH (| (<< 1 $G_M_ARENA) $arg2) ]; mapcomplete arena
dark            = [ start $arg1 $G_DEATHMATCH (| (<< 1 $G_M_DARK) $arg2) ]; mapcomplete dark

timelimits      = [timelimit $arg1; looplist v $limitidxname [[timelimit@v] $arg1]]
overtimelimits  = [overtimelimit $arg1; looplist v $limitidxname [[overtimelimit@v] $arg1]]
overtimeallows  = [overtimeallow $arg1; looplist v $limitidxname [[overtimeallow@v] $arg1]]

delta_game_0 = [ if $inzoom [ setzoom $arg1 ] [ weapon -1 $arg1 ] ]
delta_spec_0 = [ if $curshiftmod [ followdelta $arg1 ] [ spectvdelta $arg1 ] ]
delta_wait_0 = [ if $curshiftmod [ followdelta $arg1 ] [ spectvdelta $arg1 ] ]

nullbind = []

bind MOUSE1         [ primary ] // primary fire
bind MOUSE2         [ secondary ] // secondary fire
bind MOUSE3         [ reload ] // reload
bind MOUSE3         [ game_hud_piemenu_open_weapsel_key ]
bind MOUSE4         [ universaldelta 1 ]    // also used for editing, see below
bind MOUSE5         [ universaldelta -1 ]
bind MOUSE6         [ weapon (weapload 0) 1 ]
bind MOUSE7         [ weapon (weapload 1) 1 ]
bind LEFTBRACKET    [ universaldelta 1 ]
bind RIGHTBRACKET   [ universaldelta -1 ]

bind ESCAPE [uitoggle]

specbind LSHIFT     [ shiftmod 1; onrelease [ shiftmod 0 ] ]
specbind E          [ spectate 0 ]
specbind MOUSE1     [ spectate 0 ]
specbind MOUSE2     [ spectate 0 ]
specbind HOME       [ specmodeswitch ]
specbind R          [ specmodeswitch ]
specbind MOUSE3     [ specmodeswitch ]
specbind SPACE      [ specmodeswitch ]

waitbind LSHIFT     [ shiftmod 1; onrelease [ shiftmod 0 ] ]
waitbind MOUSE1     [ nullbind ]
waitbind MOUSE2     [ nullbind ]
waitbind END        [ waitmodeswitch ]
waitbind R          [ waitmodeswitch ]
waitbind MOUSE3     [ waitmodeswitch ]

bind END            [ suicide ]

bind W              [ forward ]
bind A              [ left ]
bind S              [ backward ]
bind D              [ right ]

bind UP             [ forward ]
bind DOWN           [ backward ]
bind RIGHT          [ right ]
bind LEFT           [ left ]

bind SPACE          [ jump ]
bind LCTRL          [ special ]
bind LSHIFT         [ crouch ]
bind E              [ use ]
bind R              [ reload ]
bind Q              [ special ]
bind Z              [ drop ]
bind F              [ affinity ]
bind K              [ suicide ]

bind TAB            [ showscores ]

saytextcolour = 0; setpersist saytextcolour 1; setcomplete saytextcolour 1
getsaycolour = [
    sc = $saytextcolour
    if (< $sc 0) [ sc = (getplayercolour 1) ]
    if (> $sc 0) [ result (format "^f[%1]" $sc) ] [ result "" ]
]
saytextcommand =    [inputconsole $arg1 "Say:" [say $consolestr]]
sayteamcommand =    [inputconsole $arg1 "Say to team:" [sayteam $consolestr]]

bind T              [ gameui_chat ]
bind RETURN         [ gameui_chat ]
bind KP_ENTER       [ gameui_chat ]
bind BACKQUOTE      [ inputconsole ]
bind SLASH          [ inputconsole ]
bind Y              [ gameui_chat_team ]
bind V              [ game_hud_piemenu_open_taunts ]
bind X              [ game_hud_piemenu_open_teamchat ]

bind KP_MINUS       [ soundmastervol (max (-f $soundmastervol 0.05) 0) ]
bind KP_PLUS        [ soundmastervol (min (+f $soundmastervol 0.05) 1.0) ]
bind KP_DIVIDE      [ togglesound ]

bind PAUSE          [ gamepaused (! $gamepaused) ]

addbot =            [ botoffset (+ $botoffset 1) ]
delbot =            [ botoffset (- $botoffset 1) ]

bind INSERT         [ addbot ]
bind DELETE         [ delbot ]
bind HOME           [ spectate 1 ]

// bind F1             [ uiopen help ]
bind F2             [ edittoggle ]
bind F3             [ gameui_open ui_gameui_maps ]
bind F4             [ gameui_open ui_gameui_vote ]
bind F5             [ gameui_open ui_gameui_online ]
bind F6             [ gameui_open ui_gameui_player ]
// bind F7             [ uiopen team ]
bind F8             [ toggleconsole ]
bind F9             [ thirdpersonswitch ]
bind F10            [ takescreenshot ]
bind F11            [ screenshot ]
bind COMMA          [ gameui_player_show_loadout ]
// bind PERIOD         [ uiopen team ]

num_nav_handlers = []

num_nav_addhandler = [
    if (! (listhas $num_nav_handlers $arg1)) [
        append num_nav_handlers $arg1
    ]
]

// 1:<num>
num_nav = [
    local _intercept _weap
    _intercept = 0

    looplist _handler $num_nav_handlers [
        _intercept = ($_handler $arg1)
    ]

    if (! $_intercept) [
        weapon $arg1
    ]
]

bind 1              [ num_nav 0 ]
bind 2              [ num_nav 1 ]
bind 3              [ num_nav 2 ]
bind 4              [ num_nav 3 ]
bind 5              [ num_nav 4 ]
bind 6              [ num_nav 5 ]
bind 7              [ num_nav 6 ]
bind 8              [ num_nav 7 ]
bind 9              [ num_nav 8 ]
bind 0              [ num_nav 9 ]
bind MINUS          [ weapon 10 ]
bind EQUALS         [ weapon 11 ]

delta_edit_0 = [
    if $blendpaintmode [
        blendbrushdelta $arg1
        blendbrush
    ] [
        local editfacekeepsel_old
        if $curshiftmod [
            editfacekeepsel_old = $editfacekeepsel
            editfacekeepsel 1
        ]
        editfacewentpush (? (> $arg1 0) 1 -1) 1
        editfacekeepsel $editfacekeepsel_old
    ]
]

delta_edit_1    = [ nodebug [ gridpower (+ $arg1 $gridpower) ] ]
delta_edit_2    = [ editfacewentpush $arg1 0 ] // push face/corners selected
delta_edit_3    = [ editfacewentpush $arg1 2 ] // push corner pointed at by cursor
delta_edit_4    = [ editrotate $arg1 ] // rotate 90 degrees
delta_edit_5    = [ entproperty 0 $arg1 ] // and the others
delta_edit_6    = [ edittex $arg1 ] // change textures
delta_edit_9    = [ selectbrush $arg1 ] // change heightmap brushes
delta_edit_10   = [ entautoview $arg1 ]
delta_edit_11   = [ entproperty 0 $arg1 ]
delta_edit_12   = [ entproperty 1 $arg1 ]
delta_edit_13   = [ entproperty 2 $arg1 ]
delta_edit_14   = [ entproperty 3 $arg1 ]
delta_edit_15   = [ entproperty 4 $arg1 ]
delta_edit_16   = [ entproperty 5 $arg1 ]
delta_edit_17   = [ entproperty 6 $arg1 ]
delta_edit_18   = [ entproperty 7 $arg1 ]
delta_edit_19   = [ entproperty 8 $arg1 ]
delta_edit_20   = [ entproperty 9 $arg1 ]
delta_edit_21   = [ addselorient $arg1 ]

editbind 1          [ domodifier 11 ]
editbind 2          [ domodifier 12 ]
editbind 3          [ domodifier 13 ]
editbind 4          [ domodifier 14 ]
editbind 5          [ domodifier 15 ]
editbind 6          [ domodifier 16 ]
editbind 7          [ domodifier 17 ]
editbind 8          [ domodifier 18 ]
editbind 9          [ domodifier 19 ]
editbind 0          [ domodifier 20 ]

editbind K          [ domodifier 9 ]

editbindvar MINUS   allfaces

editbind LSHIFT     [ shiftmod 1; onrelease [ shiftmod 0 ] ]
editbind LCTRL      [
    passthrough 1
    showpastegrid 1

    onrelease [
        passthrough 0
        showpastegrid 0
    ]
]

editbind LALT       [ hmapedit 0; blendpaintmode 0 ]

gridbindswitch = 0
togglegrid = [
    case $gridbindswitch 3 [
        showpastegrid 0; showcursorgrid 0; showselboxgrid 0; gridbindswitch = 0
    ] 2 [
        showpastegrid 0; showcursorgrid 0; showselboxgrid 1; gridbindswitch = 3
    ] 1 [
        showpastegrid 0; showcursorgrid 1; showselboxgrid 0; gridbindswitch = 2
    ] 0 [
        showpastegrid 1; showcursorgrid 0; showselboxgrid 0; gridbindswitch = 1
    ]
]; setcomplete togglegrid 1

editbind SPACE      [ entmoving 0; cancelsel ]
editbind MOUSE1     [ tool_leftclick_handler ]
editbind MOUSE3     [ selcorners ]
editbind MOUSE2     [ tool_rightclick_handler ]

do [brush_2] //421

editbind H          [ hmapedit (! $hmapedit); blendpaintmode 0 ]

editbind BACKSPACE  [ editdel ]

editbind PERIOD     selentedit

paintmodes = ["off" "overwrite blendmap" "merge blendmap" "max opacity to brush's" "inverted merge" "opacity multiplier (erasing)"]

editbind P [
    hmapedit 0;
    blendpaintmode (? (= $blendpaintmode (getvarmax blendpaintmode)) 0 (+ $blendpaintmode 1))
    echo (concatword "^fgBlend mode:^fw " (at $paintmodes $blendpaintmode) " (^fc" $blendpaintmode "^fw)")
]
editbindvar B       fullbright


editbind F2         [ edittoggle ]
editbind BACKSLASH  [ readpixel [printpixel] ]

// editbind E          [showcompass editing]
// editbind KP0        [ uiopen materials ]
editbind KP1        [ air ]
editbind KP2        [ alpha ]
editbind KP3        [ water ]
editbind KP4        [ lava ]
editbind KP5        [ clip ]
editbind KP6        [ noclip]
editbind KP7        [ aiclip ]
editbind KP8        [ death ]
editbind KP9        [ ladder ]

toolbind F5 ta_env
toolbind F6 ta_ents
toolbind F7 ta_mats
toolbind F9 ta_cycle_outline

toolbind E ta_ent_placer (kmod CTRL)
toolbind G ta_cycle_gridview (kmod ALT)
toolbind G ta_gridpower
toolbind F ta_pushface
toolbind Q ta_pushcorner
toolbind R ta_rotate
toolbind SEMICOLON ta_cycleside
toolbind U ta_cut
toolbind B ta_toggle_fullbright

toolbind COMMA ta_ent_cyclefocus
toolbind DELETE ta_ent_delete
toolbind END ta_ent_deselect
toolbind N ta_ent_selinsel

toolbind TAB ta_cursor_mode

editbind UP         [ tool_nav_v  1      ]
editbind DOWN       [ tool_nav_v -1      ]
editbind RIGHT      [ tool_nav_h  1      ]
editbind LEFT       [ tool_nav_h -1      ]
editbind RETURN     [ tool_enter_handler ]
editbind ESCAPE     [ tool_esc_handler   ]

exec "config/tool/binds/default.cfg"

texturerehash = [ compactvslots 1; exec "config/map/textures.cfg" ]

dobindsearch = [
    [search@[arg2]binds] $arg1 5 "^f{" "}" (? $textkeyprefixeps (? $textkeyimages "|" ", ") (? $textkeyimages "" " ")) (? $textkeyprefixeps (? $textkeyimages "|" " or ") (? $textkeyimages "" " "))
]

deffvarp brightness 0.1 1 3 [
    hdrbrightscale (get brightness)
    bloomthreshold (-f 1.0 (divf 0.05 (get brightness)))
    bloomscale     (divf 1.5 (get brightness))
]
brightness 1

defvarp damagesound 0 1 3 [
    case (get damagesound) 0 [
        playdamagetones 0
        playdamageticks 0
    ] 1 [
        playdamagetones 1
        playdamageticks 0
    ] 2 [
        playdamagetones 0
        playdamageticks 1
    ] 3 [
        playdamagetones 1
        playdamageticks 1
    ]
]
damagesound 1
