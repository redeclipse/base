tool_goto_control_Materials = [
    tool_mat_tabs = $arg1
    toolpanel_open tool_materials right [
        p_title       = "Material volumes"
        p_clear_stack = 1
    ]
]

// 1:<description> 2:<tags> 3:<param>
tool_mat_register_control = [
    tool_register_control $arg1 [volume material @arg2] "Materials" $arg3
]

tool_mat_names = [
    "air"
    "water"
    "lava"
    "volfog"
    "clip"
    "death"
    "alpha"
    "glass"
    "noclip"
    "ladder"
    "hurt"
    "aiclip"
    "nogi"
]

tool_mat_friendly_names = [
    "Air"
    "Water"
    "Lava"
    "Fog"
    "Clip"
    "Death"
    "Alpha"
    "Glass"
    "Noclip"
    "Ladder"
    "Hurt"
    "AI-Clip"
    "No-GI"
]

tool_mat_descriptions = [
    "No material (default), removes materials"
    "Water material"
    "Lava material, kills actors and players"
    "Fog volume material"
    "Prevents any actors and players from entering"
    "Kills entering actors and players"
    "Makes map geometry transparent"
    "Simple glass material"
    "Removes collision"
    "Allows actors and players to climb"
    "Periodically hurts actors and players that are inside"
    "Prevents AI players from entering"
    "Prevents global illumination from being drawn inside, useful for GI leaks"
]

tool_mat_num_variants = 4

tool_mat_variant_mats = [
    "water"
    "glass"
    "lava"
    "volfog"
]

tool_mat_selmats = []
tool_mat_selmats_names = []
tool_mat_numselmats = 0

// 1:<mat>
tool_mat_get_mat = [
    local _variant
    _variant = (+ (strsplice $arg1 "" 0 (- (strlen $arg1) 1)) 0)

    if (> $_variant 1) [
        result [@(strsplice $arg1 "" (- (strlen $arg1) 1) 1) @_variant]
    ] [
        result $arg1
    ]
]

tool_mat_sel_updatenames = [
    local _mat _matname _variant
    _mat = ""
    _matname = ""
    _variant = ""
    tool_mat_selmats_names = []

    loop i $tool_mat_numselmats [
        _mat = (tool_mat_get_mat (at $tool_mat_selmats $i))
        _matname = (at $tool_mat_friendly_names (listfind=s $tool_mat_names (at $_mat 0)))
        _variant = (at $_mat 1)

        if $_variant [
            append tool_mat_selmats_names [[@@_matname #@@_variant]]
        ] [
            append tool_mat_selmats_names $_matname
        ]
    ]
]

tool_mat_sel_update_proc = [
    tool_mat_selmats = $selchildmat
    tool_mat_numselmats = (listlen $tool_mat_selmats)
    tool_mat_sel_updatenames
]

tool_proc_add tool_mat_sel_update_proc

// 1:<material index>
tool_mat_gen_variant_options = [
    local _matfname _options
    _matfname = (at $tool_mat_friendly_names $arg1)
    _options = []

    loop i $tool_mat_num_variants [
        append _options [[@@(concatword $_matfname " #" (+ $i 1))]]
    ]

    result $_options
]

// 1:<material index>
tool_mat_gen_variant_option_colors = [
    local _options _matname _col
    _matname = (at $tool_mat_names $arg1)
    _col = 0
    _options = []

    loop i $tool_mat_num_variants [
        _col = $(concatword $_matname (? $i (+ $i 1) "") "colour")
        append _options [[uicolour @@_col 0.01 0.01]]
    ]

    result $_options
]

// 1:<material index> 2:<action context>
tool_setmat_setvariant = [
    local _menutype _matfname
    _menutype = (? (= $arg2 $TA_CTX_KEY) toolpanel_open_pie toolpanel_open_menu)
    _matfname = (at $tool_mat_friendly_names $arg1)

    $_menutype [
        p_text = "Set material volume"
        p_item_names = [@@(tool_mat_gen_variant_options $arg1)]
        p_item_extras = [@@(tool_mat_gen_variant_option_colors $arg1)]
        p_size = 0.25
        p_nav_enable = 1
        p_on_select = [
            local _matname
            _matname = (at $tool_mat_names @@arg1)

            if $arg1 [
                appendword _matname (+ $arg1 1)
            ]

            editmat $_matname
        ]
    ]
]

// 1:<material>
tool_mat_gettexs = [
    local _matname _matidx
    _matname = ""

    tool_mat_tex_0     = []
    tool_mat_tex_1     = []
    tool_mat_tex_2     = []
    tool_mat_tex_3     = []
    tool_mat_tex_scale = []

    loop i $tool_mat_num_variants [
        _matname = (concatword $arg1 (+ $i 1))
        _matidx  = (findmaterial $_matname)

        loop j (getvtexcount $_matidx 2) [
            append [tool_mat_tex_@j] (getvtexname $_matidx $j 2)
        ]

        append tool_mat_tex_scale (getvscale $_matidx 2)
    ]
]

// 1:<material type> 2:<variant>
tool_mat_editslot = [
    local _matname _matidx _textype
    _matname = (concatword $arg1 (+ $arg2 1))
    _matidx  = (findmaterial $_matname)

    editslot $_matidx [
        loop i (getvtexcount $_matidx 2) [
            _textype = (? (= $i 0) $_matname 1)
            texture $_textype (at $[tool_mat_tex_@i] $arg2)
        ]

        texscale (at $tool_mat_tex_scale $arg2)
    ] 0 2
]

tool_action ta_mats [
    p_short_desc = "Material volumes panel"
    p_long_desc  = "Open the material volumes panel"
    p_icon       = "<grey>textures/icons/edit/cube"
    p_category   = "Materials"
    p_code       = [
        toolpanel_toggle tool_materials right [
            p_title       = "Material volumes"
            p_clear_stack = 1
        ]
    ]
]

tool_action ta_setmat [
    p_short_desc = "Set material volume"
    p_icon       = "<grey>textures/icons/edit/cube"
    p_category   = "Materials"
    p_code       = [
        local _menutype
        _menutype = (? (= $tool_action_ctx $TA_CTX_KEY) toolpanel_open_pie toolpanel_open_menu)

        $_menutype [
            p_text       = "Set material volume"
            p_item_names = $tool_mat_friendly_names
            p_tips       = $tool_mat_descriptions
            p_size       = 0.25
            p_nav_enable = 1
            p_on_select  = [
                local _matname
                _matname = (at $tool_mat_names $arg1)

                if (listhas $tool_mat_variant_mats $_matname) [
                    tool_setmat_setvariant $arg1 @@@tool_action_ctx
                ] [
                    editmat $_matname
                ]
            ]
        ]
    ]
]

tool_action ta_toggle_showmat [
    p_short_desc = "Toggle material volume overlay"
    p_icon       = "<grey>textures/icons/edit/cube"
    p_category   = "Materials"
    p_code       = [
        if (= $tool_action_ctx $TA_CTX_KEY) [
            showmat (! $showmat)
        ] [
            tool_toolbar_focus_showmat
        ]
    ]
]
